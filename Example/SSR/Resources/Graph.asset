%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f160e23783a4f634f84fde12acb29a71, type: 3}
  m_Name: Graph
  m_EditorClassIdentifier: 
  viewPosition: {x: -1760, y: -336, z: 0}
  viewScale: {x: 0.43232757, y: 0.43232757, z: 1}
  nodes:
  - nodeName: GBuffer
    parameters:
    - name: a
      info: 
      type_str: System.Single
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c666c6f61743e313c2f666c6f61743e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: b
      info: 
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e66616c73653c2f626f6f6c65616e3e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: c
      info: 
      type_str: UnityEngine.Vector2
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c566563746f723220786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c783e312e31303937333c2f783e0d0a20203c793e323c2f793e0d0a3c2f566563746f72323e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: d
      info: 
      type_str: HypnosRenderPipeline.RenderPass.E
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c453e643c2f453e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: e
      info: 
      type_str: UnityEngine.LayerMask
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c4c617965724d61736b20786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c76616c75653e31303c2f76616c75653e0d0a3c2f4c617965724d61736b3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: f
      info: 
      type_str: UnityEngine.Color
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c436f6c6f7220786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c723e313c2f723e0d0a20203c673e323c2f673e0d0a20203c623e333c2f623e0d0a20203c613e302e32323333343c2f613e0d0a3c2f436f6c6f723e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: depth
      info: 
      mustConnect: 0
    outputs:
    - name: depth
      info: 
      mustConnect: 0
    - name: diffuse
      info: 
      mustConnect: 0
    - name: specular
      info: 
      mustConnect: 0
    - name: normal
      info: 
      mustConnect: 0
    - name: emission
      info: 
      mustConnect: 0
    - name: microAO
      info: 
      mustConnect: 0
    - name: motion
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 1468.9921
      y: 1215.8007
      width: 300
      height: 396
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.GBuffer
  - nodeName: OutputNode
    parameters:
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: result
      info: Output to screen
      mustConnect: 1
    outputs: []
    position:
      serializedVersion: 2
      x: 8032.293
      y: 1220.1249
      width: 299.99994
      height: 104.999985
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.OutputNode
  - nodeName: CullLight
    parameters:
    - name: cullingType
      info: 
      type_str: HypnosRenderPipeline.RenderPass.CullLight+CullingType
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c43756c6c696e67547970653e4672757374756d3c2f43756c6c696e67547970653e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: radius
      info: When using Sphere culling, radius is culling radius
      type_str: System.Single
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c666c6f61743e3230303c2f666c6f61743e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: faraway
      info: how much distance should light become faraway light
      type_str: System.Single
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c666c6f61743e3130303c2f666c6f61743e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs: []
    outputs:
    - name: lights
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 1068.6611
      y: 1054.8522
      width: 300
      height: 168
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.CullLight
  - nodeName: ZBin
    parameters:
    - name: tileCount
      info: 'xy: tile count of screen, z: depth split count'
      type_str: UnityEngine.Vector3Int
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c566563746f7233496e7420786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c783e3132383c2f783e0d0a20203c793e36343c2f793e0d0a20203c7a3e32343c2f7a3e0d0a3c2f566563746f7233496e743e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: maxLightCountPerTile
      info: max light number per tile
      type_str: System.Int32
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c696e743e36343c2f696e743e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: includeRTLight
      info: 
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: lights
      info: 
      mustConnect: 1
    - name: depth
      info: 
      mustConnect: 0
    outputs:
    - name: lightBuffer
      info: 
      mustConnect: 0
    - name: tileLights
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 1469.243
      y: 925.05963
      width: 300
      height: 239.99998
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.ZBin
  - nodeName: RTDI
    parameters:
    - name: includeSunlight
      info: 
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e66616c73653c2f626f6f6c65616e3e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: lights
      info: 
      mustConnect: 1
    - name: lightBuffer
      info: 
      mustConnect: 1
    - name: tiledLights
      info: 
      mustConnect: 1
    - name: directionalLightBuffer
      info: 
      mustConnect: 0
    - name: depth
      info: 
      mustConnect: 1
    - name: diffuse
      info: 
      mustConnect: 1
    - name: specular
      info: 
      mustConnect: 1
    - name: normal
      info: 
      mustConnect: 1
    - name: emission
      info: 
      mustConnect: 1
    - name: ao
      info: 
      mustConnect: 0
    outputs:
    - name: directionalLightBuffer
      info: 
      mustConnect: 0
    - name: lightingResult
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 2016.75
      y: 1360.1002
      width: 300.00006
      height: 388.00006
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.RTDI
  - nodeName: CombineColorDepth
    parameters:
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: color
      info: 
      mustConnect: 1
    - name: depth
      info: 
      mustConnect: 1
    outputs:
    - name: combined
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 7556.293
      y: 1305.1248
      width: 299.99994
      height: 152.99997
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.CombineColorDepth
  - nodeName: AreaLight
    parameters:
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: lights
      info: 
      mustConnect: 1
    - name: target
      info: 
      mustConnect: 0
    - name: depth
      info: 
      mustConnect: 1
    - name: diffuse
      info: 
      mustConnect: 1
    - name: specular
      info: 
      mustConnect: 1
    - name: normal
      info: 
      mustConnect: 1
    - name: ao
      info: 
      mustConnect: 0
    outputs:
    - name: target
      info: 
      mustConnect: 0
    - name: depth
      info: 
      mustConnect: 1
    position:
      serializedVersion: 2
      x: 2561.2432
      y: 1529.5304
      width: 300
      height: 297
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.AreaLight
  - nodeName: SunAtmo
    parameters:
    - name: TLutResolution
      info: 
      type_str: UnityEngine.Vector2Int
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c566563746f7232496e7420786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c783e3132383c2f783e0d0a20203c793e3132383c2f793e0d0a3c2f566563746f7232496e743e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: SkyLutResolution
      info: 
      type_str: UnityEngine.Vector2Int
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c566563746f7232496e7420786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c783e36343c2f783e0d0a20203c793e3232343c2f793e0d0a3c2f566563746f7232496e743e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: MSLutResolution
      info: 
      type_str: UnityEngine.Vector2Int
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c566563746f7232496e7420786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c783e33323c2f783e0d0a20203c793e33323c2f793e0d0a3c2f566563746f7232496e743e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: VolumeResolution
      info: 
      type_str: UnityEngine.Vector3Int
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c566563746f7233496e7420786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c783e33323c2f783e0d0a20203c793e33323c2f793e0d0a20203c7a3e33323c2f7a3e0d0a3c2f566563746f7233496e743e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: VolumeMaxDepth
      info: 
      type_str: System.Single
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c666c6f61743e33323030303c2f666c6f61743e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: sunLight
      info: 
      mustConnect: 0
    - name: target
      info: 
      mustConnect: 1
    - name: depth
      info: 
      mustConnect: 1
    - name: diffuse
      info: 
      mustConnect: 1
    - name: specular
      info: 
      mustConnect: 1
    - name: normal
      info: 
      mustConnect: 1
    - name: ao
      info: 
      mustConnect: 0
    outputs:
    - name: target
      info: 
      mustConnect: 1
    - name: skyBox
      info: 
      mustConnect: 0
    - name: sunBuffer
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 3099
      y: 1261
      width: 300
      height: 426
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.SunAtmo
  - nodeName: LocalLighting
    parameters:
    - name: debugTiledLight
      info: 
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e66616c73653c2f626f6f6c65616e3e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e66616c73653c2f626f6f6c65616e3e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: lightBuffer
      info: 
      mustConnect: 1
    - name: tiledLights
      info: 
      mustConnect: 1
    - name: depth
      info: 
      mustConnect: 1
    - name: diffuse
      info: 
      mustConnect: 1
    - name: specular
      info: 
      mustConnect: 1
    - name: normal
      info: 
      mustConnect: 1
    - name: emission
      info: 
      mustConnect: 1
    - name: ao
      info: 
      mustConnect: 0
    outputs:
    - name: lightingResult
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 1984.1643
      y: 765.2179
      width: 300
      height: 316
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.LocalLighting
  - nodeName: SkyBoxIBL
    parameters:
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e66616c73653c2f626f6f6c65616e3e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: skyBox
      info: 
      mustConnect: 1
    - name: target
      info: 
      mustConnect: 1
    - name: depth
      info: 
      mustConnect: 1
    - name: diffuse
      info: 
      mustConnect: 1
    - name: specular
      info: 
      mustConnect: 1
    - name: normal
      info: 
      mustConnect: 1
    - name: ao
      info: 
      mustConnect: 0
    outputs:
    - name: target
      info: 
      mustConnect: 1
    - name: irradiance
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 3745.2947
      y: 1364.5911
      width: 299.99994
      height: 296.99994
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.SkyBoxIBL
  - nodeName: HiDepth
    parameters:
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: depth
      info: 
      mustConnect: 1
    outputs:
    - name: hiZ
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 3897.5605
      y: 1168.8708
      width: 300
      height: 129
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.HiDepth
  - nodeName: SSR
    parameters:
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e66616c73653c2f626f6f6c65616e3e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: sceneColor
      info: 
      mustConnect: 1
    - name: filteredColor
      info: 
      mustConnect: 0
    - name: hiZ
      info: 
      mustConnect: 1
    - name: motion
      info: 
      mustConnect: 0
    - name: specular
      info: 
      mustConnect: 1
    - name: normal
      info: 
      mustConnect: 1
    - name: ao
      info: 
      mustConnect: 0
    - name: skybox
      info: 
      mustConnect: 0
    outputs:
    - name: result
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 5593.6094
      y: 1003.7706
      width: 300
      height: 297
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.SSR
  - nodeName: RTSpecular
    parameters:
    - name: useRTShadow
      info: 
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: lightBuffer
      info: 
      mustConnect: 1
    - name: tiledLights
      info: 
      mustConnect: 1
    - name: lights
      info: 
      mustConnect: 0
    - name: sun
      info: 
      mustConnect: 0
    - name: sceneColor
      info: 
      mustConnect: 1
    - name: filteredColor
      info: 
      mustConnect: 0
    - name: hiZ
      info: 
      mustConnect: 1
    - name: motion
      info: 
      mustConnect: 0
    - name: specular
      info: 
      mustConnect: 1
    - name: normal
      info: 
      mustConnect: 1
    - name: ao
      info: 
      mustConnect: 0
    - name: skybox
      info: 
      mustConnect: 0
    outputs:
    - name: result
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 5579.874
      y: 1359.0339
      width: 299.99994
      height: 412
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.RTSpecular
  - nodeName: PyramidColor
    parameters:
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: filterTarget
      info: 
      mustConnect: 1
    outputs:
    - name: pyramidColor
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 6062.5474
      y: 1644.655
      width: 300
      height: 129
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.PyramidColor
  - nodeName: RTGI
    parameters:
    - name: useRTShadow
      info: 
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: maxDepth
      info: 
      type_str: System.Int32
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c696e743e323c2f696e743e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: spp
      info: 
      type_str: System.Int32
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c696e743e313c2f696e743e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: showVariance
      info: 
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e66616c73653c2f626f6f6c65616e3e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: lightBuffer
      info: 
      mustConnect: 1
    - name: tiledLights
      info: 
      mustConnect: 1
    - name: lights
      info: 
      mustConnect: 0
    - name: sun
      info: 
      mustConnect: 0
    - name: target
      info: 
      mustConnect: 1
    - name: depth
      info: 
      mustConnect: 1
    - name: motion
      info: 
      mustConnect: 0
    - name: diffuse
      info: 
      mustConnect: 1
    - name: normal
      info: 
      mustConnect: 1
    - name: skybox
      info: 
      mustConnect: 0
    outputs:
    - name: target
      info: 
      mustConnect: 1
    position:
      serializedVersion: 2
      x: 4512.091
      y: 1500.2043
      width: 299.99994
      height: 428.99994
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.RTGI
  - nodeName: PyramidColor
    parameters:
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: filterTarget
      info: 
      mustConnect: 1
    outputs:
    - name: pyramidColor
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 4993
      y: 1722.5209
      width: 300
      height: 129
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.PyramidColor
  - nodeName: Transparent
    parameters:
    - name: renderAreaLight
      info: Enable Area light for transparent objects are more expensive than opaque
        objects, please remember that.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: lightBuffer
      info: 
      mustConnect: 1
    - name: tiledLights
      info: 
      mustConnect: 1
    - name: lights
      info: 
      mustConnect: 0
    - name: areaLightBuffer
      info: 
      mustConnect: 0
    - name: filterdScreenColor
      info: If has, use filtered screen color for refraction.
      mustConnect: 0
    - name: target
      info: 
      mustConnect: 0
    - name: depth
      info: 
      mustConnect: 0
    outputs:
    - name: areaLightBuffer
      info: 
      mustConnect: 0
    - name: target
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 6424.913
      y: 1025.7775
      width: 300
      height: 316
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.Transparent
  edgeRecs:
  - i: 3
    o: 2
    i_n: lights
    o_n: lights
  - i: 4
    o: 2
    i_n: lights
    o_n: lights
  - i: 4
    o: 3
    i_n: lightBuffer
    o_n: lightBuffer
  - i: 4
    o: 3
    i_n: tiledLights
    o_n: tileLights
  - i: 4
    o: 0
    i_n: depth
    o_n: depth
  - i: 4
    o: 0
    i_n: specular
    o_n: specular
  - i: 4
    o: 0
    i_n: normal
    o_n: normal
  - i: 4
    o: 0
    i_n: emission
    o_n: emission
  - i: 4
    o: 0
    i_n: ao
    o_n: microAO
  - i: 5
    o: 0
    i_n: depth
    o_n: depth
  - i: 6
    o: 2
    i_n: lights
    o_n: lights
  - i: 6
    o: 0
    i_n: depth
    o_n: depth
  - i: 6
    o: 0
    i_n: specular
    o_n: specular
  - i: 6
    o: 0
    i_n: normal
    o_n: normal
  - i: 6
    o: 0
    i_n: ao
    o_n: microAO
  - i: 7
    o: 2
    i_n: sunLight
    o_n: lights
  - i: 7
    o: 6
    i_n: target
    o_n: target
  - i: 7
    o: 0
    i_n: specular
    o_n: specular
  - i: 7
    o: 0
    i_n: normal
    o_n: normal
  - i: 7
    o: 0
    i_n: ao
    o_n: microAO
  - i: 8
    o: 0
    i_n: depth
    o_n: depth
  - i: 8
    o: 3
    i_n: lightBuffer
    o_n: lightBuffer
  - i: 8
    o: 3
    i_n: tiledLights
    o_n: tileLights
  - i: 8
    o: 0
    i_n: specular
    o_n: specular
  - i: 8
    o: 0
    i_n: normal
    o_n: normal
  - i: 8
    o: 0
    i_n: emission
    o_n: emission
  - i: 8
    o: 0
    i_n: ao
    o_n: microAO
  - i: 7
    o: 6
    i_n: depth
    o_n: depth
  - i: 9
    o: 7
    i_n: skyBox
    o_n: skyBox
  - i: 9
    o: 7
    i_n: target
    o_n: target
  - i: 9
    o: 6
    i_n: depth
    o_n: depth
  - i: 9
    o: 0
    i_n: specular
    o_n: specular
  - i: 9
    o: 0
    i_n: normal
    o_n: normal
  - i: 9
    o: 0
    i_n: ao
    o_n: microAO
  - i: 10
    o: 6
    i_n: depth
    o_n: depth
  - i: 11
    o: 10
    i_n: hiZ
    o_n: hiZ
  - i: 11
    o: 0
    i_n: motion
    o_n: motion
  - i: 11
    o: 0
    i_n: specular
    o_n: specular
  - i: 11
    o: 0
    i_n: normal
    o_n: normal
  - i: 11
    o: 0
    i_n: ao
    o_n: microAO
  - i: 11
    o: 7
    i_n: skybox
    o_n: skyBox
  - i: 4
    o: 0
    i_n: diffuse
    o_n: diffuse
  - i: 8
    o: 0
    i_n: diffuse
    o_n: diffuse
  - i: 6
    o: 0
    i_n: diffuse
    o_n: diffuse
  - i: 7
    o: 0
    i_n: diffuse
    o_n: diffuse
  - i: 9
    o: 0
    i_n: diffuse
    o_n: diffuse
  - i: 12
    o: 3
    i_n: lightBuffer
    o_n: lightBuffer
  - i: 12
    o: 3
    i_n: tiledLights
    o_n: tileLights
  - i: 12
    o: 2
    i_n: lights
    o_n: lights
  - i: 12
    o: 7
    i_n: sun
    o_n: sunBuffer
  - i: 12
    o: 10
    i_n: hiZ
    o_n: hiZ
  - i: 12
    o: 0
    i_n: motion
    o_n: motion
  - i: 12
    o: 0
    i_n: specular
    o_n: specular
  - i: 12
    o: 0
    i_n: normal
    o_n: normal
  - i: 12
    o: 0
    i_n: ao
    o_n: microAO
  - i: 12
    o: 7
    i_n: skybox
    o_n: skyBox
  - i: 14
    o: 3
    i_n: lightBuffer
    o_n: lightBuffer
  - i: 14
    o: 3
    i_n: tiledLights
    o_n: tileLights
  - i: 14
    o: 2
    i_n: lights
    o_n: lights
  - i: 14
    o: 7
    i_n: sun
    o_n: sunBuffer
  - i: 14
    o: 0
    i_n: motion
    o_n: motion
  - i: 14
    o: 0
    i_n: diffuse
    o_n: diffuse
  - i: 14
    o: 0
    i_n: normal
    o_n: normal
  - i: 14
    o: 7
    i_n: skybox
    o_n: skyBox
  - i: 14
    o: 6
    i_n: depth
    o_n: depth
  - i: 12
    o: 15
    i_n: filteredColor
    o_n: pyramidColor
  - i: 11
    o: 15
    i_n: filteredColor
    o_n: pyramidColor
  - i: 14
    o: 9
    i_n: target
    o_n: target
  - i: 15
    o: 14
    i_n: filterTarget
    o_n: target
  - i: 12
    o: 14
    i_n: sceneColor
    o_n: target
  - i: 11
    o: 14
    i_n: sceneColor
    o_n: target
  - i: 1
    o: 5
    i_n: result
    o_n: combined
  - i: 13
    o: 12
    i_n: filterTarget
    o_n: result
  - i: 6
    o: 4
    i_n: target
    o_n: lightingResult
  - i: 16
    o: 3
    i_n: lightBuffer
    o_n: lightBuffer
  - i: 16
    o: 3
    i_n: tiledLights
    o_n: tileLights
  - i: 16
    o: 2
    i_n: lights
    o_n: lights
  - i: 16
    o: 13
    i_n: filterdScreenColor
    o_n: pyramidColor
  - i: 16
    o: 12
    i_n: target
    o_n: result
  - i: 16
    o: 6
    i_n: depth
    o_n: depth
  - i: 5
    o: 16
    i_n: color
    o_n: target
  node_edgeRecs:
  - node: 2
    in_edges: 
    out_edge: 00000000010000000a0000000f000000300000003a0000004c000000
  - node: 3
    in_edges: 00000000
    out_edge: 020000000300000015000000160000002e0000002f00000038000000390000004a0000004b000000
  - node: 4
    in_edges: 010000000200000003000000040000000500000006000000070000000800000029000000
    out_edge: 49000000
  - node: 0
    in_edges: 
    out_edge: 0400000005000000060000000700000008000000090000000b0000000c0000000d0000000e000000110000001200000013000000140000001700000018000000190000001a0000001f000000200000002100000024000000250000002600000027000000290000002a0000002b0000002c0000002d000000330000003400000035000000360000003c0000003d0000003e000000
  - node: 5
    in_edges: 0900000050000000
    out_edge: 47000000
  - node: 6
    in_edges: 0a0000000b0000000c0000000d0000000e0000002b00000049000000
    out_edge: 100000001b0000001e00000022000000400000004f000000
  - node: 7
    in_edges: 0f000000100000001100000012000000130000001b0000002c000000
    out_edge: 1c0000001d0000002800000031000000370000003b0000003f000000
  - node: 8
    in_edges: 1400000015000000160000001700000018000000190000001a0000002a000000
    out_edge: 
  - node: 9
    in_edges: 1c0000001d0000001e0000001f00000020000000210000002d000000
    out_edge: 43000000
  - node: 10
    in_edges: 22000000
    out_edge: 2300000032000000
  - node: 11
    in_edges: 2300000024000000250000002600000027000000280000004200000046000000
    out_edge: 
  - node: 12
    in_edges: 2e0000002f00000030000000310000003200000033000000340000003500000036000000370000004100000045000000
    out_edge: 480000004e000000
  - node: 14
    in_edges: 38000000390000003a0000003b0000003c0000003d0000003e0000003f0000004000000043000000
    out_edge: 440000004500000046000000
  - node: 15
    in_edges: 44000000
    out_edge: 4100000042000000
  - node: 1
    in_edges: 47000000
    out_edge: 
  - node: 13
    in_edges: 48000000
    out_edge: 4d000000
  - node: 16
    in_edges: 4a0000004b0000004c0000004d0000004e0000004f000000
    out_edge: 50000000
  groupRecs:
  - name: Pipeline
    color: {r: 0.09803922, g: 0.09803922, b: 0.09803922, a: 0.4}
    nodes: 000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f00000010000000
  recompiled: 0
  code: "using HypnosRenderPipeline.RenderPass;\r\nusing UnityEngine;\r\n\r\nnamespace
    HypnosRenderPipeline.RenderGraph\r\n{\r\n    public class HRG_Graph_Executor
    : HRGExecutor\r\n    {\r\n        // Nodes:\r\n        // ----------------------------\r\n       
    GBuffer GBuffer0;\r\n        OutputNode OutputNode1;\r\n        CullLight CullLight2;\r\n       
    ZBin ZBin3;\r\n        RTDI RTDI4;\r\n        CombineColorDepth CombineColorDepth5;\r\n       
    AreaLight AreaLight6;\r\n        SunAtmo SunAtmo7;\r\n        SkyBoxIBL SkyBoxIBL8;\r\n       
    HiDepth HiDepth9;\r\n        RTSpecular RTSpecular10;\r\n        PyramidColor
    PyramidColor11;\r\n        RTGI RTGI12;\r\n        PyramidColor PyramidColor13;\r\n       
    Transparent Transparent14;\r\n        // ----------------------------\r\n       
    \r\n        // ShaderIDs:\r\n        // ----------------------------\r\n       
    System.Int32 GBuffer0_depth = Shader.PropertyToID(\"GBuffer0.depth\");\r\n       
    System.Int32 GBuffer0_diffuse = Shader.PropertyToID(\"GBuffer0.diffuse\");\r\n       
    System.Int32 GBuffer0_specular = Shader.PropertyToID(\"GBuffer0.specular\");\r\n       
    System.Int32 GBuffer0_normal = Shader.PropertyToID(\"GBuffer0.normal\");\r\n       
    System.Int32 GBuffer0_emission = Shader.PropertyToID(\"GBuffer0.emission\");\r\n       
    System.Int32 GBuffer0_microAO = Shader.PropertyToID(\"GBuffer0.microAO\");\r\n       
    System.Int32 GBuffer0_motion = Shader.PropertyToID(\"GBuffer0.motion\");\r\n       
    System.Int32 OutputNode1_result = Shader.PropertyToID(\"OutputNode1.result\");\r\n       
    System.Int32 CullLight2_lights = Shader.PropertyToID(\"CullLight2.lights\");\r\n       
    System.Int32 ZBin3_lights = Shader.PropertyToID(\"ZBin3.lights\");\r\n       
    System.Int32 ZBin3_depth = Shader.PropertyToID(\"ZBin3.depth\");\r\n        System.Int32
    ZBin3_lightBuffer = Shader.PropertyToID(\"ZBin3.lightBuffer\");\r\n        System.Int32
    ZBin3_tileLights = Shader.PropertyToID(\"ZBin3.tileLights\");\r\n        System.Int32
    RTDI4_lights = Shader.PropertyToID(\"RTDI4.lights\");\r\n        System.Int32
    RTDI4_lightBuffer = Shader.PropertyToID(\"RTDI4.lightBuffer\");\r\n        System.Int32
    RTDI4_tiledLights = Shader.PropertyToID(\"RTDI4.tiledLights\");\r\n        System.Int32
    RTDI4_directionalLightBuffer = Shader.PropertyToID(\"RTDI4.directionalLightBuffer\");\r\n       
    System.Int32 RTDI4_depth = Shader.PropertyToID(\"RTDI4.depth\");\r\n        System.Int32
    RTDI4_diffuse = Shader.PropertyToID(\"RTDI4.diffuse\");\r\n        System.Int32
    RTDI4_specular = Shader.PropertyToID(\"RTDI4.specular\");\r\n        System.Int32
    RTDI4_normal = Shader.PropertyToID(\"RTDI4.normal\");\r\n        System.Int32
    RTDI4_emission = Shader.PropertyToID(\"RTDI4.emission\");\r\n        System.Int32
    RTDI4_ao = Shader.PropertyToID(\"RTDI4.ao\");\r\n        System.Int32 RTDI4_lightingResult
    = Shader.PropertyToID(\"RTDI4.lightingResult\");\r\n        System.Int32 CombineColorDepth5_color
    = Shader.PropertyToID(\"CombineColorDepth5.color\");\r\n        System.Int32
    CombineColorDepth5_depth = Shader.PropertyToID(\"CombineColorDepth5.depth\");\r\n       
    System.Int32 CombineColorDepth5_combined = Shader.PropertyToID(\"CombineColorDepth5.combined\");\r\n       
    System.Int32 AreaLight6_lights = Shader.PropertyToID(\"AreaLight6.lights\");\r\n       
    System.Int32 AreaLight6_target = Shader.PropertyToID(\"AreaLight6.target\");\r\n       
    System.Int32 AreaLight6_depth = Shader.PropertyToID(\"AreaLight6.depth\");\r\n       
    System.Int32 AreaLight6_diffuse = Shader.PropertyToID(\"AreaLight6.diffuse\");\r\n       
    System.Int32 AreaLight6_specular = Shader.PropertyToID(\"AreaLight6.specular\");\r\n       
    System.Int32 AreaLight6_normal = Shader.PropertyToID(\"AreaLight6.normal\");\r\n       
    System.Int32 AreaLight6_ao = Shader.PropertyToID(\"AreaLight6.ao\");\r\n       
    System.Int32 SunAtmo7_sunLight = Shader.PropertyToID(\"SunAtmo7.sunLight\");\r\n       
    System.Int32 SunAtmo7_target = Shader.PropertyToID(\"SunAtmo7.target\");\r\n       
    System.Int32 SunAtmo7_depth = Shader.PropertyToID(\"SunAtmo7.depth\");\r\n       
    System.Int32 SunAtmo7_diffuse = Shader.PropertyToID(\"SunAtmo7.diffuse\");\r\n       
    System.Int32 SunAtmo7_specular = Shader.PropertyToID(\"SunAtmo7.specular\");\r\n       
    System.Int32 SunAtmo7_normal = Shader.PropertyToID(\"SunAtmo7.normal\");\r\n       
    System.Int32 SunAtmo7_ao = Shader.PropertyToID(\"SunAtmo7.ao\");\r\n        System.Int32
    SunAtmo7_skyBox = Shader.PropertyToID(\"SunAtmo7.skyBox\");\r\n        System.Int32
    SunAtmo7_sunBuffer = Shader.PropertyToID(\"SunAtmo7.sunBuffer\");\r\n       
    System.Int32 SkyBoxIBL8_skyBox = Shader.PropertyToID(\"SkyBoxIBL8.skyBox\");\r\n       
    System.Int32 SkyBoxIBL8_target = Shader.PropertyToID(\"SkyBoxIBL8.target\");\r\n       
    System.Int32 SkyBoxIBL8_depth = Shader.PropertyToID(\"SkyBoxIBL8.depth\");\r\n       
    System.Int32 SkyBoxIBL8_diffuse = Shader.PropertyToID(\"SkyBoxIBL8.diffuse\");\r\n       
    System.Int32 SkyBoxIBL8_specular = Shader.PropertyToID(\"SkyBoxIBL8.specular\");\r\n       
    System.Int32 SkyBoxIBL8_normal = Shader.PropertyToID(\"SkyBoxIBL8.normal\");\r\n       
    System.Int32 SkyBoxIBL8_ao = Shader.PropertyToID(\"SkyBoxIBL8.ao\");\r\n       
    System.Int32 SkyBoxIBL8_irradiance = Shader.PropertyToID(\"SkyBoxIBL8.irradiance\");\r\n       
    System.Int32 HiDepth9_depth = Shader.PropertyToID(\"HiDepth9.depth\");\r\n       
    System.Int32 HiDepth9_hiZ = Shader.PropertyToID(\"HiDepth9.hiZ\");\r\n       
    System.Int32 RTSpecular10_lightBuffer = Shader.PropertyToID(\"RTSpecular10.lightBuffer\");\r\n       
    System.Int32 RTSpecular10_tiledLights = Shader.PropertyToID(\"RTSpecular10.tiledLights\");\r\n       
    System.Int32 RTSpecular10_lights = Shader.PropertyToID(\"RTSpecular10.lights\");\r\n       
    System.Int32 RTSpecular10_sun = Shader.PropertyToID(\"RTSpecular10.sun\");\r\n       
    System.Int32 RTSpecular10_sceneColor = Shader.PropertyToID(\"RTSpecular10.sceneColor\");\r\n       
    System.Int32 RTSpecular10_filteredColor = Shader.PropertyToID(\"RTSpecular10.filteredColor\");\r\n       
    System.Int32 RTSpecular10_hiZ = Shader.PropertyToID(\"RTSpecular10.hiZ\");\r\n       
    System.Int32 RTSpecular10_motion = Shader.PropertyToID(\"RTSpecular10.motion\");\r\n       
    System.Int32 RTSpecular10_specular = Shader.PropertyToID(\"RTSpecular10.specular\");\r\n       
    System.Int32 RTSpecular10_normal = Shader.PropertyToID(\"RTSpecular10.normal\");\r\n       
    System.Int32 RTSpecular10_ao = Shader.PropertyToID(\"RTSpecular10.ao\");\r\n       
    System.Int32 RTSpecular10_skybox = Shader.PropertyToID(\"RTSpecular10.skybox\");\r\n       
    System.Int32 RTSpecular10_result = Shader.PropertyToID(\"RTSpecular10.result\");\r\n       
    System.Int32 PyramidColor11_filterTarget = Shader.PropertyToID(\"PyramidColor11.filterTarget\");\r\n       
    System.Int32 PyramidColor11_pyramidColor = Shader.PropertyToID(\"PyramidColor11.pyramidColor\");\r\n       
    System.Int32 RTGI12_lightBuffer = Shader.PropertyToID(\"RTGI12.lightBuffer\");\r\n       
    System.Int32 RTGI12_tiledLights = Shader.PropertyToID(\"RTGI12.tiledLights\");\r\n       
    System.Int32 RTGI12_lights = Shader.PropertyToID(\"RTGI12.lights\");\r\n       
    System.Int32 RTGI12_sun = Shader.PropertyToID(\"RTGI12.sun\");\r\n        System.Int32
    RTGI12_target = Shader.PropertyToID(\"RTGI12.target\");\r\n        System.Int32
    RTGI12_depth = Shader.PropertyToID(\"RTGI12.depth\");\r\n        System.Int32
    RTGI12_motion = Shader.PropertyToID(\"RTGI12.motion\");\r\n        System.Int32
    RTGI12_diffuse = Shader.PropertyToID(\"RTGI12.diffuse\");\r\n        System.Int32
    RTGI12_normal = Shader.PropertyToID(\"RTGI12.normal\");\r\n        System.Int32
    RTGI12_skybox = Shader.PropertyToID(\"RTGI12.skybox\");\r\n        System.Int32
    PyramidColor13_filterTarget = Shader.PropertyToID(\"PyramidColor13.filterTarget\");\r\n       
    System.Int32 PyramidColor13_pyramidColor = Shader.PropertyToID(\"PyramidColor13.pyramidColor\");\r\n       
    System.Int32 Transparent14_lightBuffer = Shader.PropertyToID(\"Transparent14.lightBuffer\");\r\n       
    System.Int32 Transparent14_tiledLights = Shader.PropertyToID(\"Transparent14.tiledLights\");\r\n       
    System.Int32 Transparent14_lights = Shader.PropertyToID(\"Transparent14.lights\");\r\n       
    System.Int32 Transparent14_areaLightBuffer = Shader.PropertyToID(\"Transparent14.areaLightBuffer\");\r\n       
    System.Int32 Transparent14_filterdScreenColor = Shader.PropertyToID(\"Transparent14.filterdScreenColor\");\r\n       
    System.Int32 Transparent14_target = Shader.PropertyToID(\"Transparent14.target\");\r\n       
    System.Int32 Transparent14_depth = Shader.PropertyToID(\"Transparent14.depth\");\r\n       
    // ----------------------------\r\n        \r\n        public void Init()\r\n       
    {\r\n            GBuffer0 = new GBuffer();\r\n            GBuffer0.a = 1f;\r\n           
    GBuffer0.b = false;\r\n            GBuffer0.c = new Vector2(1.10973f, 2f);\r\n           
    GBuffer0.d = E.d;\r\n            GBuffer0.e = 10;\r\n            GBuffer0.f =
    new Color(1f, 2f, 3f, 0.22334f);\r\n            GBuffer0.enabled = true;\r\n           
    OutputNode1 = new OutputNode();\r\n            OutputNode1.enabled = true;\r\n           
    CullLight2 = new CullLight();\r\n            CullLight2.cullingType = CullLight.CullingType.Frustum;\r\n           
    CullLight2.radius = 200f;\r\n            CullLight2.faraway = 100f;\r\n           
    CullLight2.enabled = true;\r\n            ZBin3 = new ZBin();\r\n           
    ZBin3.tileCount = new Vector3Int(128, 64, 24);\r\n            ZBin3.maxLightCountPerTile
    = 64;\r\n            ZBin3.includeRTLight = true;\r\n            ZBin3.enabled
    = true;\r\n            RTDI4 = new RTDI();\r\n            RTDI4.includeSunlight
    = false;\r\n            RTDI4.enabled = true;\r\n            CombineColorDepth5
    = new CombineColorDepth();\r\n            CombineColorDepth5.enabled = true;\r\n           
    AreaLight6 = new AreaLight();\r\n            AreaLight6.enabled = true;\r\n           
    SunAtmo7 = new SunAtmo();\r\n            SunAtmo7.TLutResolution = new Vector2Int(128,
    128);\r\n            SunAtmo7.SkyLutResolution = new Vector2Int(64, 224);\r\n           
    SunAtmo7.MSLutResolution = new Vector2Int(32, 32);\r\n            SunAtmo7.VolumeResolution
    = new Vector3Int(32, 32, 32);\r\n            SunAtmo7.VolumeMaxDepth = 32000f;\r\n           
    SunAtmo7.enabled = true;\r\n            SkyBoxIBL8 = new SkyBoxIBL();\r\n           
    SkyBoxIBL8.enabled = false;\r\n            HiDepth9 = new HiDepth();\r\n           
    HiDepth9.enabled = true;\r\n            RTSpecular10 = new RTSpecular();\r\n           
    RTSpecular10.useRTShadow = true;\r\n            RTSpecular10.enabled = true;\r\n           
    PyramidColor11 = new PyramidColor();\r\n            PyramidColor11.enabled =
    true;\r\n            RTGI12 = new RTGI();\r\n            RTGI12.useRTShadow =
    true;\r\n            RTGI12.maxDepth = 2;\r\n            RTGI12.spp = 1;\r\n           
    RTGI12.showVariance = false;\r\n            RTGI12.enabled = true;\r\n           
    PyramidColor13 = new PyramidColor();\r\n            PyramidColor13.enabled =
    true;\r\n            Transparent14 = new Transparent();\r\n            Transparent14.renderAreaLight
    = true;\r\n            Transparent14.enabled = true;\r\n        }\r\n       
    \r\n        public int Execute(RenderContext context, bool debug = false)\r\n       
    {\r\n            System.Int32 result = -1;\r\n            \r\n            //GBuffer0\r\n           
    {\r\n                context.commandBuffer.name = \"GBuffer0\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    GBuffer0.depth.AllocateResourcces(context, GBuffer0_depth);\r\n                   
    GBuffer0.depth.name = \"GBuffer0.depth\";\r\n                    // outputs\r\n                   
    GBuffer0.diffuse.AllocateResourcces(context, GBuffer0_diffuse);\r\n                   
    GBuffer0.diffuse.name = \"GBuffer0.diffuse\";\r\n                    GBuffer0.diffuse.connected
    = true;\r\n                    GBuffer0.specular.AllocateResourcces(context,
    GBuffer0_specular);\r\n                    GBuffer0.specular.name = \"GBuffer0.specular\";\r\n                   
    GBuffer0.specular.connected = true;\r\n                    GBuffer0.normal.AllocateResourcces(context,
    GBuffer0_normal);\r\n                    GBuffer0.normal.name = \"GBuffer0.normal\";\r\n                   
    GBuffer0.normal.connected = true;\r\n                    GBuffer0.emission.AllocateResourcces(context,
    GBuffer0_emission);\r\n                    GBuffer0.emission.name = \"GBuffer0.emission\";\r\n                   
    GBuffer0.emission.connected = true;\r\n                    GBuffer0.microAO.AllocateResourcces(context,
    GBuffer0_microAO);\r\n                    GBuffer0.microAO.name = \"GBuffer0.microAO\";\r\n                   
    GBuffer0.microAO.connected = true;\r\n                    GBuffer0.motion.AllocateResourcces(context,
    GBuffer0_motion);\r\n                    GBuffer0.motion.name = \"GBuffer0.motion\";\r\n                   
    GBuffer0.motion.connected = true;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                GBuffer0.Execute(context);\r\n                // postprocess
    node\r\n                {\r\n                    GBuffer0.diffuse.connected =
    true;\r\n                    GBuffer0.specular.connected = true;\r\n                   
    GBuffer0.normal.connected = true;\r\n                    GBuffer0.emission.connected
    = true;\r\n                    GBuffer0.microAO.connected = true;\r\n                   
    GBuffer0.motion.connected = true;\r\n                }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //CullLight2\r\n           
    {\r\n                context.commandBuffer.name = \"CullLight2\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    // outputs\r\n                    CullLight2.lights.AllocateResourcces(context,
    CullLight2_lights);\r\n                    CullLight2.lights.name = \"CullLight2.lights\";\r\n                   
    CullLight2.lights.connected = true;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                CullLight2.Execute(context);\r\n                // postprocess
    node\r\n                {\r\n                }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //ZBin3\r\n           
    {\r\n                context.commandBuffer.name = \"ZBin3\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    ZBin3.lights.connected = true;\r\n                    ZBin3.lights.Move(CullLight2.lights);\r\n                   
    ZBin3.depth.AllocateResourcces(context, ZBin3_depth);\r\n                   
    ZBin3.depth.name = \"ZBin3.depth\";\r\n                    // outputs\r\n                   
    ZBin3.lightBuffer.AllocateResourcces(context, ZBin3_lightBuffer);\r\n                   
    ZBin3.lightBuffer.name = \"ZBin3.lightBuffer\";\r\n                    ZBin3.lightBuffer.connected
    = true;\r\n                    ZBin3.tileLights.AllocateResourcces(context, ZBin3_tileLights);\r\n                   
    ZBin3.tileLights.name = \"ZBin3.tileLights\";\r\n                    ZBin3.tileLights.connected
    = true;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                ZBin3.Execute(context);\r\n                // postprocess
    node\r\n                {\r\n                    ZBin3.depth.ReleaseResourcces(context);\r\n                   
    ZBin3.tileLights.connected = true;\r\n                }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //RTDI4\r\n           
    {\r\n                context.commandBuffer.name = \"RTDI4\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    RTDI4.lights.connected = true;\r\n                    RTDI4.lights.Move(CullLight2.lights);\r\n                   
    RTDI4.lightBuffer.connected = true;\r\n                    RTDI4.lightBuffer.Move(ZBin3.lightBuffer);\r\n                   
    RTDI4.tiledLights.connected = true;\r\n                    RTDI4.tiledLights.Move(ZBin3.tileLights);\r\n                   
    RTDI4.directionalLightBuffer.AllocateResourcces(context, RTDI4_directionalLightBuffer);\r\n                   
    RTDI4.directionalLightBuffer.name = \"RTDI4.directionalLightBuffer\";\r\n                   
    RTDI4.depth.connected = true;\r\n                    RTDI4.depth.Move(GBuffer0.depth);\r\n                   
    RTDI4.diffuse.connected = true;\r\n                    RTDI4.diffuse.Move(GBuffer0.diffuse);\r\n                   
    RTDI4.specular.connected = true;\r\n                    RTDI4.specular.Move(GBuffer0.specular);\r\n                   
    RTDI4.normal.connected = true;\r\n                    RTDI4.normal.Move(GBuffer0.normal);\r\n                   
    RTDI4.emission.connected = true;\r\n                    RTDI4.emission.Move(GBuffer0.emission);\r\n                   
    RTDI4.ao.connected = true;\r\n                    RTDI4.ao.Move(GBuffer0.microAO);\r\n                   
    // outputs\r\n                    RTDI4.lightingResult.AllocateResourcces(context,
    RTDI4_lightingResult);\r\n                    RTDI4.lightingResult.name = \"RTDI4.lightingResult\";\r\n                   
    RTDI4.lightingResult.connected = true;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                RTDI4.Execute(context);\r\n                // postprocess
    node\r\n                {\r\n                    RTDI4.directionalLightBuffer.ReleaseResourcces(context);\r\n                   
    RTDI4.emission.ReleaseResourcces(context);\r\n                    RTDI4.lightingResult.connected
    = true;\r\n                }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //AreaLight6\r\n           
    {\r\n                context.commandBuffer.name = \"AreaLight6\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    AreaLight6.lights.connected = true;\r\n                    AreaLight6.lights.Move(CullLight2.lights);\r\n                   
    AreaLight6.target.connected = true;\r\n                    AreaLight6.target.Move(RTDI4.lightingResult);\r\n                   
    AreaLight6.depth.connected = true;\r\n                    AreaLight6.depth.AllocateResourcces(context,
    AreaLight6_depth);\r\n                    AreaLight6.depth.name = \"AreaLight6.depth\";\r\n                   
    AreaLight6.depth.CastFrom(context, GBuffer0.depth);\r\n                    AreaLight6.diffuse.connected
    = true;\r\n                    AreaLight6.diffuse.Move(GBuffer0.diffuse);\r\n                   
    AreaLight6.specular.connected = true;\r\n                    AreaLight6.specular.Move(GBuffer0.specular);\r\n                   
    AreaLight6.normal.connected = true;\r\n                    AreaLight6.normal.Move(GBuffer0.normal);\r\n                   
    AreaLight6.ao.connected = true;\r\n                    AreaLight6.ao.Move(GBuffer0.microAO);\r\n                   
    // outputs\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                AreaLight6.Execute(context);\r\n                // postprocess
    node\r\n                {\r\n                    AreaLight6.depth.connected =
    true;\r\n                }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //HiDepth9\r\n           
    {\r\n                context.commandBuffer.name = \"HiDepth9\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    HiDepth9.depth.connected = true;\r\n                    HiDepth9.depth.Move(AreaLight6.depth);\r\n                   
    // outputs\r\n                    HiDepth9.hiZ.AllocateResourcces(context, HiDepth9_hiZ);\r\n                   
    HiDepth9.hiZ.name = \"HiDepth9.hiZ\";\r\n                    HiDepth9.hiZ.connected
    = true;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                HiDepth9.Execute(context);\r\n                // postprocess
    node\r\n                {\r\n                }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //SunAtmo7\r\n           
    {\r\n                context.commandBuffer.name = \"SunAtmo7\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    SunAtmo7.sunLight.connected = true;\r\n                    SunAtmo7.sunLight.Move(CullLight2.lights);\r\n                   
    SunAtmo7.target.connected = true;\r\n                    SunAtmo7.target.Move(AreaLight6.target);\r\n                   
    SunAtmo7.depth.connected = true;\r\n                    SunAtmo7.depth.Move(AreaLight6.depth);\r\n                   
    SunAtmo7.diffuse.connected = true;\r\n                    SunAtmo7.diffuse.Move(GBuffer0.diffuse);\r\n                   
    SunAtmo7.specular.connected = true;\r\n                    SunAtmo7.specular.Move(GBuffer0.specular);\r\n                   
    SunAtmo7.normal.connected = true;\r\n                    SunAtmo7.normal.Move(GBuffer0.normal);\r\n                   
    SunAtmo7.ao.connected = true;\r\n                    SunAtmo7.ao.Move(GBuffer0.microAO);\r\n                   
    // outputs\r\n                    SunAtmo7.skyBox.AllocateResourcces(context,
    SunAtmo7_skyBox);\r\n                    SunAtmo7.skyBox.name = \"SunAtmo7.skyBox\";\r\n                   
    SunAtmo7.skyBox.connected = true;\r\n                    SunAtmo7.sunBuffer.AllocateResourcces(context,
    SunAtmo7_sunBuffer);\r\n                    SunAtmo7.sunBuffer.name = \"SunAtmo7.sunBuffer\";\r\n                   
    SunAtmo7.sunBuffer.connected = true;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                SunAtmo7.Execute(context);\r\n                // postprocess
    node\r\n                {\r\n                    SunAtmo7.skyBox.connected =
    true;\r\n                    SunAtmo7.sunBuffer.connected = true;\r\n               
    }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //SkyBoxIBL8\r\n           
    {\r\n                context.commandBuffer.name = \"SkyBoxIBL8\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    SkyBoxIBL8.skyBox.connected = true;\r\n                    SkyBoxIBL8.skyBox.Move(SunAtmo7.skyBox);\r\n                   
    SkyBoxIBL8.target.connected = true;\r\n                    SkyBoxIBL8.target.Move(SunAtmo7.target);\r\n                   
    SkyBoxIBL8.depth.connected = true;\r\n                    SkyBoxIBL8.depth.Move(AreaLight6.depth);\r\n                   
    SkyBoxIBL8.diffuse.connected = true;\r\n                    SkyBoxIBL8.diffuse.Move(GBuffer0.diffuse);\r\n                   
    SkyBoxIBL8.specular.connected = true;\r\n                    SkyBoxIBL8.specular.Move(GBuffer0.specular);\r\n                   
    SkyBoxIBL8.normal.connected = true;\r\n                    SkyBoxIBL8.normal.Move(GBuffer0.normal);\r\n                   
    SkyBoxIBL8.ao.connected = true;\r\n                    SkyBoxIBL8.ao.Move(GBuffer0.microAO);\r\n                   
    // outputs\r\n                    SkyBoxIBL8.irradiance.AllocateResourcces(context,
    SkyBoxIBL8_irradiance);\r\n                    SkyBoxIBL8.irradiance.name = \"SkyBoxIBL8.irradiance\";\r\n                   
    SkyBoxIBL8.irradiance.connected = false;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                // postprocess node\r\n                {\r\n                   
    SkyBoxIBL8.irradiance.ReleaseResourcces(context);\r\n                    SkyBoxIBL8.irradiance.connected
    = false;\r\n                }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //RTGI12\r\n           
    {\r\n                context.commandBuffer.name = \"RTGI12\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    RTGI12.lightBuffer.connected = true;\r\n                    RTGI12.lightBuffer.Move(ZBin3.lightBuffer);\r\n                   
    RTGI12.tiledLights.connected = true;\r\n                    RTGI12.tiledLights.Move(ZBin3.tileLights);\r\n                   
    RTGI12.lights.connected = true;\r\n                    RTGI12.lights.Move(CullLight2.lights);\r\n                   
    RTGI12.sun.connected = true;\r\n                    RTGI12.sun.Move(SunAtmo7.sunBuffer);\r\n                   
    RTGI12.target.connected = false;\r\n                    RTGI12.target.Move(SkyBoxIBL8.target);\r\n                   
    RTGI12.depth.connected = true;\r\n                    RTGI12.depth.Move(AreaLight6.depth);\r\n                   
    RTGI12.motion.connected = true;\r\n                    RTGI12.motion.Move(GBuffer0.motion);\r\n                   
    RTGI12.diffuse.connected = true;\r\n                    RTGI12.diffuse.Move(GBuffer0.diffuse);\r\n                   
    RTGI12.normal.connected = true;\r\n                    RTGI12.normal.Move(GBuffer0.normal);\r\n                   
    RTGI12.skybox.connected = true;\r\n                    RTGI12.skybox.Move(SunAtmo7.skyBox);\r\n                   
    // outputs\r\n                }\r\n                // perform node\r\n               
    RTGI12.Execute(context);\r\n                // postprocess node\r\n               
    {\r\n                }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //PyramidColor13\r\n           
    {\r\n                context.commandBuffer.name = \"PyramidColor13\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    PyramidColor13.filterTarget.connected = true;\r\n                    PyramidColor13.filterTarget.Move(RTGI12.target);\r\n                   
    // outputs\r\n                    PyramidColor13.pyramidColor.AllocateResourcces(context,
    PyramidColor13_pyramidColor);\r\n                    PyramidColor13.pyramidColor.name
    = \"PyramidColor13.pyramidColor\";\r\n                    PyramidColor13.pyramidColor.connected
    = true;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                PyramidColor13.Execute(context);\r\n                //
    postprocess node\r\n                {\r\n                }\r\n               
    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //RTSpecular10\r\n           
    {\r\n                context.commandBuffer.name = \"RTSpecular10\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    RTSpecular10.lightBuffer.connected = true;\r\n                    RTSpecular10.lightBuffer.Move(ZBin3.lightBuffer);\r\n                   
    RTSpecular10.tiledLights.connected = true;\r\n                    RTSpecular10.tiledLights.Move(ZBin3.tileLights);\r\n                   
    RTSpecular10.lights.connected = true;\r\n                    RTSpecular10.lights.Move(CullLight2.lights);\r\n                   
    RTSpecular10.sun.connected = true;\r\n                    RTSpecular10.sun.Move(SunAtmo7.sunBuffer);\r\n                   
    RTSpecular10.sceneColor.connected = true;\r\n                    RTSpecular10.sceneColor.Move(RTGI12.target);\r\n                   
    RTSpecular10.filteredColor.connected = true;\r\n                    RTSpecular10.filteredColor.Move(PyramidColor13.pyramidColor);\r\n                   
    RTSpecular10.hiZ.connected = true;\r\n                    RTSpecular10.hiZ.Move(HiDepth9.hiZ);\r\n                   
    RTSpecular10.motion.connected = true;\r\n                    RTSpecular10.motion.Move(GBuffer0.motion);\r\n                   
    RTSpecular10.specular.connected = true;\r\n                    RTSpecular10.specular.Move(GBuffer0.specular);\r\n                   
    RTSpecular10.normal.connected = true;\r\n                    RTSpecular10.normal.Move(GBuffer0.normal);\r\n                   
    RTSpecular10.ao.connected = true;\r\n                    RTSpecular10.ao.Move(GBuffer0.microAO);\r\n                   
    RTSpecular10.skybox.connected = true;\r\n                    RTSpecular10.skybox.Move(SunAtmo7.skyBox);\r\n                   
    // outputs\r\n                    RTSpecular10.result.AllocateResourcces(context,
    RTSpecular10_result);\r\n                    RTSpecular10.result.name = \"RTSpecular10.result\";\r\n                   
    RTSpecular10.result.connected = true;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                RTSpecular10.Execute(context);\r\n                //
    postprocess node\r\n                {\r\n                    RTSpecular10.filteredColor.ReleaseResourcces(context);\r\n                   
    RTSpecular10.hiZ.ReleaseResourcces(context);\r\n                }\r\n               
    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //PyramidColor11\r\n           
    {\r\n                context.commandBuffer.name = \"PyramidColor11\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    PyramidColor11.filterTarget.connected = true;\r\n                    PyramidColor11.filterTarget.Move(RTSpecular10.result);\r\n                   
    // outputs\r\n                    PyramidColor11.pyramidColor.AllocateResourcces(context,
    PyramidColor11_pyramidColor);\r\n                    PyramidColor11.pyramidColor.name
    = \"PyramidColor11.pyramidColor\";\r\n                    PyramidColor11.pyramidColor.connected
    = true;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                PyramidColor11.Execute(context);\r\n                //
    postprocess node\r\n                {\r\n                }\r\n               
    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //Transparent14\r\n           
    {\r\n                context.commandBuffer.name = \"Transparent14\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    Transparent14.lightBuffer.connected = true;\r\n                    Transparent14.lightBuffer.Move(ZBin3.lightBuffer);\r\n                   
    Transparent14.tiledLights.connected = true;\r\n                    Transparent14.tiledLights.Move(ZBin3.tileLights);\r\n                   
    Transparent14.lights.connected = true;\r\n                    Transparent14.lights.Move(CullLight2.lights);\r\n                   
    Transparent14.areaLightBuffer.AllocateResourcces(context, Transparent14_areaLightBuffer);\r\n                   
    Transparent14.areaLightBuffer.name = \"Transparent14.areaLightBuffer\";\r\n                   
    Transparent14.filterdScreenColor.connected = true;\r\n                    Transparent14.filterdScreenColor.Move(PyramidColor11.pyramidColor);\r\n                   
    Transparent14.target.connected = true;\r\n                    Transparent14.target.AllocateResourcces(context,
    Transparent14_target);\r\n                    Transparent14.target.name = \"Transparent14.target\";\r\n                   
    Transparent14.target.CastFrom(context, RTSpecular10.result);\r\n                   
    Transparent14.depth.connected = true;\r\n                    Transparent14.depth.Move(AreaLight6.depth);\r\n                   
    // outputs\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                Transparent14.Execute(context);\r\n                //
    postprocess node\r\n                {\r\n                    Transparent14.areaLightBuffer.ReleaseResourcces(context);\r\n                   
    Transparent14.filterdScreenColor.ReleaseResourcces(context);\r\n                   
    Transparent14.target.connected = true;\r\n                }\r\n               
    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //CombineColorDepth5\r\n           
    {\r\n                context.commandBuffer.name = \"CombineColorDepth5\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    CombineColorDepth5.color.connected = true;\r\n                    CombineColorDepth5.color.Move(Transparent14.target);\r\n                   
    CombineColorDepth5.depth.connected = true;\r\n                    CombineColorDepth5.depth.Move(GBuffer0.depth);\r\n                   
    // outputs\r\n                    CombineColorDepth5.combined.AllocateResourcces(context,
    CombineColorDepth5_combined);\r\n                    CombineColorDepth5.combined.name
    = \"CombineColorDepth5.combined\";\r\n                    CombineColorDepth5.combined.connected
    = true;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                CombineColorDepth5.Execute(context);\r\n               
    // postprocess node\r\n                {\r\n                    CombineColorDepth5.color.ReleaseResourcces(context);\r\n               
    }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //OutputNode1\r\n           
    {\r\n                context.commandBuffer.name = \"OutputNode1\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    OutputNode1.result.connected = true;\r\n                    OutputNode1.result.AllocateResourcces(context,
    OutputNode1_result);\r\n                    OutputNode1.result.name = \"OutputNode1.result\";\r\n                   
    OutputNode1.result.CastFrom(context, CombineColorDepth5.combined);\r\n                   
    CombineColorDepth5.combined.ReleaseResourcces(context);\r\n                   
    // outputs\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                result = OutputNode1.result.handle;\r\n               
    return result;\r\n            }\r\n        }\r\n        \r\n        public void
    Dispose()\r\n        {\r\n            // GBuffer0\r\n            {\r\n               
    GBuffer0.depth.Dispose();\r\n                GBuffer0.diffuse.Dispose();\r\n               
    GBuffer0.specular.Dispose();\r\n                GBuffer0.normal.Dispose();\r\n               
    GBuffer0.emission.Dispose();\r\n                GBuffer0.microAO.Dispose();\r\n               
    GBuffer0.motion.Dispose();\r\n                GBuffer0.Dispose();\r\n           
    }\r\n            // OutputNode1\r\n            {\r\n                OutputNode1.result.Dispose();\r\n               
    OutputNode1.Dispose();\r\n            }\r\n            // CullLight2\r\n           
    {\r\n                CullLight2.lights.Dispose();\r\n                CullLight2.Dispose();\r\n           
    }\r\n            // ZBin3\r\n            {\r\n                ZBin3.lights.Dispose();\r\n               
    ZBin3.depth.Dispose();\r\n                ZBin3.lightBuffer.Dispose();\r\n               
    ZBin3.tileLights.Dispose();\r\n                ZBin3.Dispose();\r\n           
    }\r\n            // RTDI4\r\n            {\r\n                RTDI4.lights.Dispose();\r\n               
    RTDI4.lightBuffer.Dispose();\r\n                RTDI4.tiledLights.Dispose();\r\n               
    RTDI4.directionalLightBuffer.Dispose();\r\n                RTDI4.depth.Dispose();\r\n               
    RTDI4.diffuse.Dispose();\r\n                RTDI4.specular.Dispose();\r\n               
    RTDI4.normal.Dispose();\r\n                RTDI4.emission.Dispose();\r\n               
    RTDI4.ao.Dispose();\r\n                RTDI4.lightingResult.Dispose();\r\n               
    RTDI4.Dispose();\r\n            }\r\n            // CombineColorDepth5\r\n           
    {\r\n                CombineColorDepth5.color.Dispose();\r\n                CombineColorDepth5.depth.Dispose();\r\n               
    CombineColorDepth5.combined.Dispose();\r\n                CombineColorDepth5.Dispose();\r\n           
    }\r\n            // AreaLight6\r\n            {\r\n                AreaLight6.lights.Dispose();\r\n               
    AreaLight6.target.Dispose();\r\n                AreaLight6.depth.Dispose();\r\n               
    AreaLight6.diffuse.Dispose();\r\n                AreaLight6.specular.Dispose();\r\n               
    AreaLight6.normal.Dispose();\r\n                AreaLight6.ao.Dispose();\r\n               
    AreaLight6.Dispose();\r\n            }\r\n            // SunAtmo7\r\n           
    {\r\n                SunAtmo7.sunLight.Dispose();\r\n                SunAtmo7.target.Dispose();\r\n               
    SunAtmo7.depth.Dispose();\r\n                SunAtmo7.diffuse.Dispose();\r\n               
    SunAtmo7.specular.Dispose();\r\n                SunAtmo7.normal.Dispose();\r\n               
    SunAtmo7.ao.Dispose();\r\n                SunAtmo7.skyBox.Dispose();\r\n               
    SunAtmo7.sunBuffer.Dispose();\r\n                SunAtmo7.Dispose();\r\n           
    }\r\n            // SkyBoxIBL8\r\n            {\r\n                SkyBoxIBL8.skyBox.Dispose();\r\n               
    SkyBoxIBL8.target.Dispose();\r\n                SkyBoxIBL8.depth.Dispose();\r\n               
    SkyBoxIBL8.diffuse.Dispose();\r\n                SkyBoxIBL8.specular.Dispose();\r\n               
    SkyBoxIBL8.normal.Dispose();\r\n                SkyBoxIBL8.ao.Dispose();\r\n               
    SkyBoxIBL8.irradiance.Dispose();\r\n                SkyBoxIBL8.Dispose();\r\n           
    }\r\n            // HiDepth9\r\n            {\r\n                HiDepth9.depth.Dispose();\r\n               
    HiDepth9.hiZ.Dispose();\r\n                HiDepth9.Dispose();\r\n           
    }\r\n            // RTSpecular10\r\n            {\r\n                RTSpecular10.lightBuffer.Dispose();\r\n               
    RTSpecular10.tiledLights.Dispose();\r\n                RTSpecular10.lights.Dispose();\r\n               
    RTSpecular10.sun.Dispose();\r\n                RTSpecular10.sceneColor.Dispose();\r\n               
    RTSpecular10.filteredColor.Dispose();\r\n                RTSpecular10.hiZ.Dispose();\r\n               
    RTSpecular10.motion.Dispose();\r\n                RTSpecular10.specular.Dispose();\r\n               
    RTSpecular10.normal.Dispose();\r\n                RTSpecular10.ao.Dispose();\r\n               
    RTSpecular10.skybox.Dispose();\r\n                RTSpecular10.result.Dispose();\r\n               
    RTSpecular10.Dispose();\r\n            }\r\n            // PyramidColor11\r\n           
    {\r\n                PyramidColor11.filterTarget.Dispose();\r\n               
    PyramidColor11.pyramidColor.Dispose();\r\n                PyramidColor11.Dispose();\r\n           
    }\r\n            // RTGI12\r\n            {\r\n                RTGI12.lightBuffer.Dispose();\r\n               
    RTGI12.tiledLights.Dispose();\r\n                RTGI12.lights.Dispose();\r\n               
    RTGI12.sun.Dispose();\r\n                RTGI12.target.Dispose();\r\n               
    RTGI12.depth.Dispose();\r\n                RTGI12.motion.Dispose();\r\n               
    RTGI12.diffuse.Dispose();\r\n                RTGI12.normal.Dispose();\r\n               
    RTGI12.skybox.Dispose();\r\n                RTGI12.Dispose();\r\n           
    }\r\n            // PyramidColor13\r\n            {\r\n                PyramidColor13.filterTarget.Dispose();\r\n               
    PyramidColor13.pyramidColor.Dispose();\r\n                PyramidColor13.Dispose();\r\n           
    }\r\n            // Transparent14\r\n            {\r\n                Transparent14.lightBuffer.Dispose();\r\n               
    Transparent14.tiledLights.Dispose();\r\n                Transparent14.lights.Dispose();\r\n               
    Transparent14.areaLightBuffer.Dispose();\r\n                Transparent14.filterdScreenColor.Dispose();\r\n               
    Transparent14.target.Dispose();\r\n                Transparent14.depth.Dispose();\r\n               
    Transparent14.Dispose();\r\n            }\r\n        }\r\n    }\r\n}\r\n"

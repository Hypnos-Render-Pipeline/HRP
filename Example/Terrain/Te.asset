%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f160e23783a4f634f84fde12acb29a71, type: 3}
  m_Name: Te
  m_EditorClassIdentifier: 
  nodes:
  - nodeName: OutputNode
    parameters:
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: result
      info: Output to screen
      mustConnect: 1
    outputs: []
    position:
      serializedVersion: 2
      x: 4237.9644
      y: 2248
      width: 300
      height: 105
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.OutputNode
  - nodeName: TerrainPass
    parameters:
    - name: gameCameraCull
      info: 
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: sunLight
      info: 
      mustConnect: 0
    - name: depth
      info: 
      mustConnect: 0
    - name: diffuse
      info: 
      mustConnect: 0
    - name: specular
      info: 
      mustConnect: 0
    - name: normal
      info: 
      mustConnect: 0
    - name: microAO
      info: 
      mustConnect: 0
    outputs:
    - name: depth
      info: 
      mustConnect: 0
    - name: diffuse
      info: 
      mustConnect: 0
    - name: specular
      info: 
      mustConnect: 0
    - name: normal
      info: 
      mustConnect: 0
    - name: microAO
      info: 
      mustConnect: 0
    - name: terrainShadowMap
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 2207
      y: 1907
      width: 300
      height: 388
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.TerrainPass
  - nodeName: SunAtmo
    parameters:
    - name: TLutResolution
      info: 
      type_str: UnityEngine.Vector2Int
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c566563746f7232496e7420786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c783e3132383c2f783e0d0a20203c793e3132383c2f793e0d0a3c2f566563746f7232496e743e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: SkyLutResolution
      info: 
      type_str: UnityEngine.Vector2Int
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c566563746f7232496e7420786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c783e36343c2f783e0d0a20203c793e3232343c2f793e0d0a3c2f566563746f7232496e743e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: MSLutResolution
      info: 
      type_str: UnityEngine.Vector2Int
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c566563746f7232496e7420786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c783e33323c2f783e0d0a20203c793e33323c2f793e0d0a3c2f566563746f7232496e743e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: VolumeResolution
      info: 
      type_str: UnityEngine.Vector3Int
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c566563746f7233496e7420786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c783e33323c2f783e0d0a20203c793e33323c2f793e0d0a20203c7a3e33323c2f7a3e0d0a3c2f566563746f7233496e743e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: VolumeMaxDepth
      info: 
      type_str: System.Single
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c666c6f61743e33323030303c2f666c6f61743e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: CloudShadowDistance
      info: 
      type_str: System.Single
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c666c6f61743e33323030303c2f666c6f61743e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: doSharp
      info: 
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: applyAtmoFog
      info: 
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: sunLight
      info: 
      mustConnect: 0
    - name: target
      info: 
      mustConnect: 0
    - name: depth
      info: 
      mustConnect: 1
    - name: diffuse
      info: 
      mustConnect: 1
    - name: specular
      info: 
      mustConnect: 1
    - name: normal
      info: 
      mustConnect: 1
    - name: ao
      info: 
      mustConnect: 0
    outputs:
    - name: target
      info: 
      mustConnect: 0
    - name: skyBox
      info: 
      mustConnect: 0
    - name: cloudShadowMap
      info: 
      mustConnect: 0
    - name: afterAtmo
      info: 
      mustConnect: 0
    - name: sunBuffer
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 2591.6174
      y: 1884.655
      width: 300
      height: 493
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.SunAtmo
  - nodeName: CullLight
    parameters:
    - name: cullingType
      info: 
      type_str: HypnosRenderPipeline.RenderPass.CullLight+CullingType
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c43756c6c696e67547970653e4672757374756d3c2f43756c6c696e67547970653e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: radius
      info: When using Sphere culling, radius is culling radius
      type_str: System.Single
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c666c6f61743e3230303c2f666c6f61743e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: faraway
      info: how much distance should light become faraway light
      type_str: System.Single
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c666c6f61743e3130303c2f666c6f61743e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs: []
    outputs:
    - name: lights
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 2207
      y: 1695
      width: 300
      height: 168
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.CullLight
  - nodeName: CombineColorDepth
    parameters:
    - name: TemporalAccumulate
      info: 
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e66616c73653c2f626f6f6c65616e3e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: color
      info: 
      mustConnect: 1
    - name: depth
      info: 
      mustConnect: 1
    outputs:
    - name: combined
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 3885.9644
      y: 2209
      width: 300
      height: 172
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.CombineColorDepth
  - nodeName: SkyBoxIBL
    parameters:
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: skyBox
      info: 
      mustConnect: 1
    - name: target
      info: 
      mustConnect: 1
    - name: depth
      info: 
      mustConnect: 1
    - name: diffuse
      info: 
      mustConnect: 1
    - name: specular
      info: 
      mustConnect: 1
    - name: normal
      info: 
      mustConnect: 1
    - name: ao
      info: 
      mustConnect: 0
    outputs:
    - name: target
      info: 
      mustConnect: 1
    - name: irradiance
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 2979
      y: 2109
      width: 300
      height: 297
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.SkyBoxIBL
  - nodeName: PostProcess
    parameters:
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: target
      info: 
      mustConnect: 1
    - name: depth
      info: 
      mustConnect: 0
    - name: motion
      info: 
      mustConnect: 0
    outputs:
    - name: target
      info: 
      mustConnect: 1
    position:
      serializedVersion: 2
      x: 3446.0437
      y: 2120.5
      width: 300
      height: 177
    info: Image Post Process.
    nodeType_str: HypnosRenderPipeline.RenderPass.PostProcess
  edgeRecs:
  - i: 0
    o: 4
    i_n: result
    o_n: combined
  - i: 4
    o: 1
    i_n: depth
    o_n: depth
  - i: 2
    o: 1
    i_n: ao
    o_n: microAO
  - i: 2
    o: 1
    i_n: normal
    o_n: normal
  - i: 2
    o: 1
    i_n: specular
    o_n: specular
  - i: 2
    o: 1
    i_n: diffuse
    o_n: diffuse
  - i: 2
    o: 1
    i_n: depth
    o_n: depth
  - i: 2
    o: 3
    i_n: sunLight
    o_n: lights
  - i: 5
    o: 2
    i_n: skyBox
    o_n: skyBox
  - i: 5
    o: 1
    i_n: depth
    o_n: depth
  - i: 5
    o: 1
    i_n: diffuse
    o_n: diffuse
  - i: 5
    o: 1
    i_n: specular
    o_n: specular
  - i: 5
    o: 1
    i_n: normal
    o_n: normal
  - i: 5
    o: 1
    i_n: ao
    o_n: microAO
  - i: 5
    o: 2
    i_n: target
    o_n: target
  - i: 6
    o: 5
    i_n: target
    o_n: target
  - i: 6
    o: 1
    i_n: depth
    o_n: depth
  - i: 4
    o: 6
    i_n: color
    o_n: target
  node_edgeRecs:
  - node: 4
    in_edges: 0100000011000000
    out_edge: 00000000
  - node: 0
    in_edges: 00000000
    out_edge: 
  - node: 1
    in_edges: 
    out_edge: 010000000200000003000000040000000500000006000000090000000a0000000b0000000c0000000d00000010000000
  - node: 2
    in_edges: 020000000300000004000000050000000600000007000000
    out_edge: 080000000e000000
  - node: 3
    in_edges: 
    out_edge: 07000000
  - node: 5
    in_edges: 08000000090000000a0000000b0000000c0000000d0000000e000000
    out_edge: 0f000000
  - node: 6
    in_edges: 0f00000010000000
    out_edge: 11000000
  groupRecs:
  - name: Pipeline
    color: {r: 0.09803922, g: 0.09803922, b: 0.09803922, a: 0.4}
    nodes: 00000000010000000300000002000000040000000500000006000000
  recompiled: 1
  code: "using HypnosRenderPipeline.RenderPass;\r\nusing UnityEngine;\r\n\r\nnamespace
    HypnosRenderPipeline.RenderGraph\r\n{\r\n    public class HRG_Te_Executor : HRGExecutor\r\n   
    {\r\n        // Nodes:\r\n        // ----------------------------\r\n       
    OutputNode OutputNode0;\r\n        TerrainPass TerrainPass1;\r\n        SunAtmo
    SunAtmo2;\r\n        CullLight CullLight3;\r\n        CombineColorDepth CombineColorDepth4;\r\n       
    SkyBoxIBL SkyBoxIBL5;\r\n        PostProcess PostProcess6;\r\n        // ----------------------------\r\n       
    \r\n        // ShaderIDs:\r\n        // ----------------------------\r\n       
    System.Int32 OutputNode0_result = Shader.PropertyToID(\"OutputNode0.result\");\r\n       
    System.Int32 TerrainPass1_sunLight = Shader.PropertyToID(\"TerrainPass1.sunLight\");\r\n       
    System.Int32 TerrainPass1_depth = Shader.PropertyToID(\"TerrainPass1.depth\");\r\n       
    System.Int32 TerrainPass1_diffuse = Shader.PropertyToID(\"TerrainPass1.diffuse\");\r\n       
    System.Int32 TerrainPass1_specular = Shader.PropertyToID(\"TerrainPass1.specular\");\r\n       
    System.Int32 TerrainPass1_normal = Shader.PropertyToID(\"TerrainPass1.normal\");\r\n       
    System.Int32 TerrainPass1_microAO = Shader.PropertyToID(\"TerrainPass1.microAO\");\r\n       
    System.Int32 TerrainPass1_terrainShadowMap = Shader.PropertyToID(\"TerrainPass1.terrainShadowMap\");\r\n       
    System.Int32 SunAtmo2_sunLight = Shader.PropertyToID(\"SunAtmo2.sunLight\");\r\n       
    System.Int32 SunAtmo2_target = Shader.PropertyToID(\"SunAtmo2.target\");\r\n       
    System.Int32 SunAtmo2_depth = Shader.PropertyToID(\"SunAtmo2.depth\");\r\n       
    System.Int32 SunAtmo2_diffuse = Shader.PropertyToID(\"SunAtmo2.diffuse\");\r\n       
    System.Int32 SunAtmo2_specular = Shader.PropertyToID(\"SunAtmo2.specular\");\r\n       
    System.Int32 SunAtmo2_normal = Shader.PropertyToID(\"SunAtmo2.normal\");\r\n       
    System.Int32 SunAtmo2_ao = Shader.PropertyToID(\"SunAtmo2.ao\");\r\n        System.Int32
    SunAtmo2_skyBox = Shader.PropertyToID(\"SunAtmo2.skyBox\");\r\n        System.Int32
    SunAtmo2_cloudShadowMap = Shader.PropertyToID(\"SunAtmo2.cloudShadowMap\");\r\n       
    System.Int32 SunAtmo2_afterAtmo = Shader.PropertyToID(\"SunAtmo2.afterAtmo\");\r\n       
    System.Int32 SunAtmo2_sunBuffer = Shader.PropertyToID(\"SunAtmo2.sunBuffer\");\r\n       
    System.Int32 CullLight3_lights = Shader.PropertyToID(\"CullLight3.lights\");\r\n       
    System.Int32 CombineColorDepth4_color = Shader.PropertyToID(\"CombineColorDepth4.color\");\r\n       
    System.Int32 CombineColorDepth4_depth = Shader.PropertyToID(\"CombineColorDepth4.depth\");\r\n       
    System.Int32 CombineColorDepth4_combined = Shader.PropertyToID(\"CombineColorDepth4.combined\");\r\n       
    System.Int32 SkyBoxIBL5_skyBox = Shader.PropertyToID(\"SkyBoxIBL5.skyBox\");\r\n       
    System.Int32 SkyBoxIBL5_target = Shader.PropertyToID(\"SkyBoxIBL5.target\");\r\n       
    System.Int32 SkyBoxIBL5_depth = Shader.PropertyToID(\"SkyBoxIBL5.depth\");\r\n       
    System.Int32 SkyBoxIBL5_diffuse = Shader.PropertyToID(\"SkyBoxIBL5.diffuse\");\r\n       
    System.Int32 SkyBoxIBL5_specular = Shader.PropertyToID(\"SkyBoxIBL5.specular\");\r\n       
    System.Int32 SkyBoxIBL5_normal = Shader.PropertyToID(\"SkyBoxIBL5.normal\");\r\n       
    System.Int32 SkyBoxIBL5_ao = Shader.PropertyToID(\"SkyBoxIBL5.ao\");\r\n       
    System.Int32 SkyBoxIBL5_irradiance = Shader.PropertyToID(\"SkyBoxIBL5.irradiance\");\r\n       
    System.Int32 PostProcess6_target = Shader.PropertyToID(\"PostProcess6.target\");\r\n       
    System.Int32 PostProcess6_depth = Shader.PropertyToID(\"PostProcess6.depth\");\r\n       
    System.Int32 PostProcess6_motion = Shader.PropertyToID(\"PostProcess6.motion\");\r\n       
    // ----------------------------\r\n        \r\n        public void Init()\r\n       
    {\r\n            OutputNode0 = new OutputNode();\r\n            OutputNode0.enabled
    = true;\r\n            TerrainPass1 = new TerrainPass();\r\n            TerrainPass1.gameCameraCull
    = true;\r\n            TerrainPass1.enabled = true;\r\n            SunAtmo2 =
    new SunAtmo();\r\n            SunAtmo2.TLutResolution = new Vector2Int(128, 128);\r\n           
    SunAtmo2.SkyLutResolution = new Vector2Int(64, 224);\r\n            SunAtmo2.MSLutResolution
    = new Vector2Int(32, 32);\r\n            SunAtmo2.VolumeResolution = new Vector3Int(32,
    32, 32);\r\n            SunAtmo2.VolumeMaxDepth = 32000f;\r\n            SunAtmo2.CloudShadowDistance
    = 32000f;\r\n            SunAtmo2.doSharp = true;\r\n            SunAtmo2.applyAtmoFog
    = true;\r\n            SunAtmo2.enabled = true;\r\n            CullLight3 = new
    CullLight();\r\n            CullLight3.cullingType = CullLight.CullingType.Frustum;\r\n           
    CullLight3.radius = 200f;\r\n            CullLight3.faraway = 100f;\r\n           
    CullLight3.enabled = true;\r\n            CombineColorDepth4 = new CombineColorDepth();\r\n           
    CombineColorDepth4.TemporalAccumulate = false;\r\n            CombineColorDepth4.enabled
    = true;\r\n            SkyBoxIBL5 = new SkyBoxIBL();\r\n            SkyBoxIBL5.enabled
    = true;\r\n            PostProcess6 = new PostProcess();\r\n            PostProcess6.enabled
    = true;\r\n        }\r\n        \r\n        public int Execute(RenderContext
    context, bool debug = false)\r\n        {\r\n            System.Int32 result
    = -1;\r\n            \r\n            //CullLight3\r\n            {\r\n               
    context.commandBuffer.name = \"CullLight3\";\r\n                // preprocess
    node\r\n                {\r\n                    // inputs\r\n                   
    // outputs\r\n                    CullLight3.lights.AllocateResourcces(context,
    CullLight3_lights);\r\n                    CullLight3.lights.name = \"CullLight3.lights\";\r\n                   
    CullLight3.lights.connected = true;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                CullLight3.Execute(context);\r\n                // postprocess
    node\r\n                {\r\n                    CullLight3.lights.connected
    = true;\r\n                }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //TerrainPass1\r\n           
    {\r\n                context.commandBuffer.name = \"TerrainPass1\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    TerrainPass1.sunLight.AllocateResourcces(context, TerrainPass1_sunLight);\r\n                   
    TerrainPass1.sunLight.name = \"TerrainPass1.sunLight\";\r\n                   
    TerrainPass1.depth.AllocateResourcces(context, TerrainPass1_depth);\r\n                   
    TerrainPass1.depth.name = \"TerrainPass1.depth\";\r\n                    TerrainPass1.diffuse.AllocateResourcces(context,
    TerrainPass1_diffuse);\r\n                    TerrainPass1.diffuse.name = \"TerrainPass1.diffuse\";\r\n                   
    TerrainPass1.specular.AllocateResourcces(context, TerrainPass1_specular);\r\n                   
    TerrainPass1.specular.name = \"TerrainPass1.specular\";\r\n                   
    TerrainPass1.normal.AllocateResourcces(context, TerrainPass1_normal);\r\n                   
    TerrainPass1.normal.name = \"TerrainPass1.normal\";\r\n                    TerrainPass1.microAO.AllocateResourcces(context,
    TerrainPass1_microAO);\r\n                    TerrainPass1.microAO.name = \"TerrainPass1.microAO\";\r\n                   
    // outputs\r\n                    TerrainPass1.terrainShadowMap.AllocateResourcces(context,
    TerrainPass1_terrainShadowMap);\r\n                    TerrainPass1.terrainShadowMap.name
    = \"TerrainPass1.terrainShadowMap\";\r\n                    TerrainPass1.terrainShadowMap.connected
    = false;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                TerrainPass1.Execute(context);\r\n                //
    postprocess node\r\n                {\r\n                    TerrainPass1.sunLight.ReleaseResourcces(context);\r\n                   
    TerrainPass1.terrainShadowMap.ReleaseResourcces(context);\r\n                   
    TerrainPass1.terrainShadowMap.connected = true;\r\n                }\r\n               
    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //SunAtmo2\r\n           
    {\r\n                context.commandBuffer.name = \"SunAtmo2\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    SunAtmo2.sunLight.connected = true;\r\n                    SunAtmo2.sunLight.Move(CullLight3.lights);\r\n                   
    SunAtmo2.target.AllocateResourcces(context, SunAtmo2_target);\r\n                   
    SunAtmo2.target.name = \"SunAtmo2.target\";\r\n                    SunAtmo2.depth.connected
    = true;\r\n                    SunAtmo2.depth.Move(TerrainPass1.depth);\r\n                   
    SunAtmo2.diffuse.connected = true;\r\n                    SunAtmo2.diffuse.Move(TerrainPass1.diffuse);\r\n                   
    SunAtmo2.specular.connected = true;\r\n                    SunAtmo2.specular.Move(TerrainPass1.specular);\r\n                   
    SunAtmo2.normal.connected = true;\r\n                    SunAtmo2.normal.Move(TerrainPass1.normal);\r\n                   
    SunAtmo2.ao.connected = true;\r\n                    SunAtmo2.ao.Move(TerrainPass1.microAO);\r\n                   
    // outputs\r\n                    SunAtmo2.skyBox.AllocateResourcces(context,
    SunAtmo2_skyBox);\r\n                    SunAtmo2.skyBox.name = \"SunAtmo2.skyBox\";\r\n                   
    SunAtmo2.skyBox.connected = true;\r\n                    SunAtmo2.cloudShadowMap.AllocateResourcces(context,
    SunAtmo2_cloudShadowMap);\r\n                    SunAtmo2.cloudShadowMap.name
    = \"SunAtmo2.cloudShadowMap\";\r\n                    SunAtmo2.cloudShadowMap.connected
    = false;\r\n                    SunAtmo2.afterAtmo.AllocateResourcces(context,
    SunAtmo2_afterAtmo);\r\n                    SunAtmo2.afterAtmo.name = \"SunAtmo2.afterAtmo\";\r\n                   
    SunAtmo2.afterAtmo.connected = false;\r\n                    SunAtmo2.sunBuffer.AllocateResourcces(context,
    SunAtmo2_sunBuffer);\r\n                    SunAtmo2.sunBuffer.name = \"SunAtmo2.sunBuffer\";\r\n                   
    SunAtmo2.sunBuffer.connected = false;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                SunAtmo2.Execute(context);\r\n                // postprocess
    node\r\n                {\r\n                    SunAtmo2.sunLight.ReleaseResourcces(context);\r\n                   
    SunAtmo2.cloudShadowMap.ReleaseResourcces(context);\r\n                    SunAtmo2.afterAtmo.ReleaseResourcces(context);\r\n                   
    SunAtmo2.sunBuffer.ReleaseResourcces(context);\r\n                    SunAtmo2.skyBox.connected
    = true;\r\n                    SunAtmo2.cloudShadowMap.connected = true;\r\n                   
    SunAtmo2.afterAtmo.connected = true;\r\n                    SunAtmo2.sunBuffer.connected
    = true;\r\n                }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //SkyBoxIBL5\r\n           
    {\r\n                context.commandBuffer.name = \"SkyBoxIBL5\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    SkyBoxIBL5.skyBox.connected = true;\r\n                    SkyBoxIBL5.skyBox.Move(SunAtmo2.skyBox);\r\n                   
    SkyBoxIBL5.target.connected = true;\r\n                    SkyBoxIBL5.target.Move(SunAtmo2.target);\r\n                   
    SkyBoxIBL5.depth.connected = true;\r\n                    SkyBoxIBL5.depth.Move(TerrainPass1.depth);\r\n                   
    SkyBoxIBL5.diffuse.connected = true;\r\n                    SkyBoxIBL5.diffuse.Move(TerrainPass1.diffuse);\r\n                   
    SkyBoxIBL5.specular.connected = true;\r\n                    SkyBoxIBL5.specular.Move(TerrainPass1.specular);\r\n                   
    SkyBoxIBL5.normal.connected = true;\r\n                    SkyBoxIBL5.normal.Move(TerrainPass1.normal);\r\n                   
    SkyBoxIBL5.ao.connected = true;\r\n                    SkyBoxIBL5.ao.Move(TerrainPass1.microAO);\r\n                   
    // outputs\r\n                    SkyBoxIBL5.irradiance.AllocateResourcces(context,
    SkyBoxIBL5_irradiance);\r\n                    SkyBoxIBL5.irradiance.name = \"SkyBoxIBL5.irradiance\";\r\n                   
    SkyBoxIBL5.irradiance.connected = false;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                SkyBoxIBL5.Execute(context);\r\n                // postprocess
    node\r\n                {\r\n                    SkyBoxIBL5.skyBox.ReleaseResourcces(context);\r\n                   
    SkyBoxIBL5.irradiance.ReleaseResourcces(context);\r\n                    SkyBoxIBL5.irradiance.connected
    = true;\r\n                }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //PostProcess6\r\n           
    {\r\n                context.commandBuffer.name = \"PostProcess6\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    PostProcess6.target.connected = true;\r\n                    PostProcess6.target.Move(SkyBoxIBL5.target);\r\n                   
    PostProcess6.depth.connected = true;\r\n                    PostProcess6.depth.Move(TerrainPass1.depth);\r\n                   
    PostProcess6.motion.AllocateResourcces(context, PostProcess6_motion);\r\n                   
    PostProcess6.motion.name = \"PostProcess6.motion\";\r\n                    //
    outputs\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                PostProcess6.Execute(context);\r\n                //
    postprocess node\r\n                {\r\n                    PostProcess6.motion.ReleaseResourcces(context);\r\n               
    }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //CombineColorDepth4\r\n           
    {\r\n                context.commandBuffer.name = \"CombineColorDepth4\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    CombineColorDepth4.color.connected = true;\r\n                    CombineColorDepth4.color.Move(PostProcess6.target);\r\n                   
    CombineColorDepth4.depth.connected = true;\r\n                    CombineColorDepth4.depth.Move(TerrainPass1.depth);\r\n                   
    // outputs\r\n                    CombineColorDepth4.combined.AllocateResourcces(context,
    CombineColorDepth4_combined);\r\n                    CombineColorDepth4.combined.name
    = \"CombineColorDepth4.combined\";\r\n                    CombineColorDepth4.combined.connected
    = true;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                CombineColorDepth4.Execute(context);\r\n               
    // postprocess node\r\n                {\r\n                    CombineColorDepth4.color.ReleaseResourcces(context);\r\n                   
    CombineColorDepth4.combined.connected = true;\r\n                }\r\n               
    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //OutputNode0\r\n           
    {\r\n                context.commandBuffer.name = \"OutputNode0\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    OutputNode0.result.connected = true;\r\n                    OutputNode0.result.Move(CombineColorDepth4.combined);\r\n                   
    // outputs\r\n                }\r\n                // perform node\r\n               
    result = OutputNode0.result.handle;\r\n                return result;\r\n           
    }\r\n        }\r\n        \r\n        public void Dispose()\r\n        {\r\n           
    // OutputNode0\r\n            {\r\n                OutputNode0.result.Dispose();\r\n               
    OutputNode0.Dispose();\r\n            }\r\n            // TerrainPass1\r\n           
    {\r\n                TerrainPass1.sunLight.Dispose();\r\n                TerrainPass1.depth.Dispose();\r\n               
    TerrainPass1.diffuse.Dispose();\r\n                TerrainPass1.specular.Dispose();\r\n               
    TerrainPass1.normal.Dispose();\r\n                TerrainPass1.microAO.Dispose();\r\n               
    TerrainPass1.terrainShadowMap.Dispose();\r\n                TerrainPass1.Dispose();\r\n           
    }\r\n            // SunAtmo2\r\n            {\r\n                SunAtmo2.sunLight.Dispose();\r\n               
    SunAtmo2.target.Dispose();\r\n                SunAtmo2.depth.Dispose();\r\n               
    SunAtmo2.diffuse.Dispose();\r\n                SunAtmo2.specular.Dispose();\r\n               
    SunAtmo2.normal.Dispose();\r\n                SunAtmo2.ao.Dispose();\r\n               
    SunAtmo2.skyBox.Dispose();\r\n                SunAtmo2.cloudShadowMap.Dispose();\r\n               
    SunAtmo2.afterAtmo.Dispose();\r\n                SunAtmo2.sunBuffer.Dispose();\r\n               
    SunAtmo2.Dispose();\r\n            }\r\n            // CullLight3\r\n           
    {\r\n                CullLight3.lights.Dispose();\r\n                CullLight3.Dispose();\r\n           
    }\r\n            // CombineColorDepth4\r\n            {\r\n                CombineColorDepth4.color.Dispose();\r\n               
    CombineColorDepth4.depth.Dispose();\r\n                CombineColorDepth4.combined.Dispose();\r\n               
    CombineColorDepth4.Dispose();\r\n            }\r\n            // SkyBoxIBL5\r\n           
    {\r\n                SkyBoxIBL5.skyBox.Dispose();\r\n                SkyBoxIBL5.target.Dispose();\r\n               
    SkyBoxIBL5.depth.Dispose();\r\n                SkyBoxIBL5.diffuse.Dispose();\r\n               
    SkyBoxIBL5.specular.Dispose();\r\n                SkyBoxIBL5.normal.Dispose();\r\n               
    SkyBoxIBL5.ao.Dispose();\r\n                SkyBoxIBL5.irradiance.Dispose();\r\n               
    SkyBoxIBL5.Dispose();\r\n            }\r\n            // PostProcess6\r\n           
    {\r\n                PostProcess6.target.Dispose();\r\n                PostProcess6.depth.Dispose();\r\n               
    PostProcess6.motion.Dispose();\r\n                PostProcess6.Dispose();\r\n           
    }\r\n        }\r\n    }\r\n}\r\n"

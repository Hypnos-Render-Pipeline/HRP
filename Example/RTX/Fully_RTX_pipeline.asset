%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f160e23783a4f634f84fde12acb29a71, type: 3}
  m_Name: Fully_RTX_pipeline
  m_EditorClassIdentifier: 
  viewPosition: {x: -760, y: -491, z: 0}
  viewScale: {x: 0.43478265, y: 0.43478265, z: 1}
  nodes:
  - nodeName: CullLight
    parameters:
    - name: cullingType
      info: 
      type_str: HypnosRenderPipeline.RenderPass.CullLight+CullingType
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c43756c6c696e67547970653e4672757374756d3c2f43756c6c696e67547970653e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: radius
      info: When using Sphere culling, radius is culling radius
      type_str: System.Single
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c666c6f61743e3230303c2f666c6f61743e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: faraway
      info: how much distance should light become faraway light
      type_str: System.Single
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c666c6f61743e3130303c2f666c6f61743e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs: []
    outputs:
    - name: lights
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 1817.7666
      y: 1394.0767
      width: 0
      height: 0
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.CullLight
  - nodeName: ZBin
    parameters:
    - name: tileCount
      info: 'xy: tile count of screen, z: depth split count'
      type_str: UnityEngine.Vector3Int
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c566563746f7233496e7420786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c783e3132383c2f783e0d0a20203c793e36343c2f793e0d0a20203c7a3e32343c2f7a3e0d0a3c2f566563746f7233496e743e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: maxLightCountPerTile
      info: max light number per tile
      type_str: System.Int32
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c696e743e36343c2f696e743e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: includeRTLight
      info: 
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: lights
      info: 
      mustConnect: 1
    - name: depth
      info: 
      mustConnect: 0
    outputs:
    - name: lightBuffer
      info: 
      mustConnect: 0
    - name: tileLights
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 2213.9778
      y: 1394
      width: 300
      height: 240
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.ZBin
  - nodeName: GBuffer
    parameters:
    - name: a
      info: 
      type_str: System.Single
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c666c6f61743e313c2f666c6f61743e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: b
      info: 
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e66616c73653c2f626f6f6c65616e3e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: c
      info: 
      type_str: UnityEngine.Vector2
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c566563746f723220786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c783e312e31303937333c2f783e0d0a20203c793e323c2f793e0d0a3c2f566563746f72323e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: d
      info: 
      type_str: HypnosRenderPipeline.RenderPass.E
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c453e643c2f453e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: e
      info: 
      type_str: UnityEngine.LayerMask
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c4c617965724d61736b20786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c76616c75653e31303c2f76616c75653e0d0a3c2f4c617965724d61736b3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: f
      info: 
      type_str: UnityEngine.Color
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c436f6c6f7220786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365223e0d0a20203c723e313c2f723e0d0a20203c673e323c2f673e0d0a20203c623e333c2f623e0d0a20203c613e302e32323333343c2f613e0d0a3c2f436f6c6f723e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: depth
      info: 
      mustConnect: 0
    outputs:
    - name: depth
      info: 
      mustConnect: 0
    - name: diffuse
      info: 
      mustConnect: 0
    - name: specular
      info: 
      mustConnect: 0
    - name: normal
      info: 
      mustConnect: 0
    - name: emission
      info: 
      mustConnect: 0
    - name: microAO
      info: 
      mustConnect: 0
    - name: motion
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 2214
      y: 1678.3018
      width: 300
      height: 225
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.GBuffer
  - nodeName: OutputNode
    parameters:
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: result
      info: Output to screen
      mustConnect: 1
    outputs: []
    position:
      serializedVersion: 2
      x: 3220.134
      y: 1697.1812
      width: 300
      height: 105
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.OutputNode
  - nodeName: RTDI
    parameters:
    - name: includeSunlight
      info: 
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    - name: enabled
      info: Should this node be excuted.
      type_str: System.Boolean
      value_bytes: 3c3f786d6c2076657273696f6e3d22312e30223f3e0d0a3c626f6f6c65616e3e747275653c2f626f6f6c65616e3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      obj_ref: {fileID: 0}
    inputs:
    - name: lights
      info: 
      mustConnect: 1
    - name: lightBuffer
      info: 
      mustConnect: 1
    - name: tiledLights
      info: 
      mustConnect: 1
    - name: directionalLightBuffer
      info: 
      mustConnect: 0
    - name: depth
      info: 
      mustConnect: 1
    - name: diffuse
      info: 
      mustConnect: 1
    - name: specular
      info: 
      mustConnect: 1
    - name: normal
      info: 
      mustConnect: 1
    - name: emission
      info: 
      mustConnect: 1
    - name: ao
      info: 
      mustConnect: 0
    outputs:
    - name: directionalLightBuffer
      info: 
      mustConnect: 0
    - name: lightingResult
      info: 
      mustConnect: 0
    position:
      serializedVersion: 2
      x: 2876.134
      y: 1457.1812
      width: 300
      height: 388.00006
    info: 
    nodeType_str: HypnosRenderPipeline.RenderPass.RTDI
  edgeRecs:
  - i: 1
    o: 0
    i_n: lights
    o_n: lights
  - i: 4
    o: 2
    i_n: depth
    o_n: depth
  - i: 4
    o: 2
    i_n: emission
    o_n: emission
  - i: 4
    o: 2
    i_n: ao
    o_n: microAO
  - i: 4
    o: 1
    i_n: lightBuffer
    o_n: lightBuffer
  - i: 4
    o: 1
    i_n: tiledLights
    o_n: tileLights
  - i: 4
    o: 0
    i_n: lights
    o_n: lights
  - i: 3
    o: 4
    i_n: result
    o_n: lightingResult
  - i: 4
    o: 2
    i_n: diffuse
    o_n: diffuse
  - i: 4
    o: 2
    i_n: specular
    o_n: specular
  - i: 4
    o: 2
    i_n: normal
    o_n: normal
  node_edgeRecs:
  - node: 0
    in_edges: 
    out_edge: 0000000006000000
  - node: 1
    in_edges: 00000000
    out_edge: 0400000005000000
  - node: 2
    in_edges: 
    out_edge: 01000000020000000300000008000000090000000a000000
  - node: 4
    in_edges: 01000000020000000300000004000000050000000600000008000000090000000a000000
    out_edge: 07000000
  - node: 3
    in_edges: 07000000
    out_edge: 
  groupRecs: []
  recompiled: 1
  code: "using HypnosRenderPipeline.RenderPass;\r\nusing UnityEngine;\r\n\r\nnamespace
    HypnosRenderPipeline.RenderGraph\r\n{\r\n    public class HRG_Fully_RTX_pipeline_Executor
    : HRGExecutor\r\n    {\r\n        // Nodes:\r\n        // ----------------------------\r\n       
    CullLight CullLight0;\r\n        ZBin ZBin1;\r\n        GBuffer GBuffer2;\r\n       
    OutputNode OutputNode3;\r\n        RTDI RTDI4;\r\n        // ----------------------------\r\n       
    \r\n        // ShaderIDs:\r\n        // ----------------------------\r\n       
    System.Int32 CullLight0_lights = Shader.PropertyToID(\"CullLight0.lights\");\r\n       
    System.Int32 ZBin1_lights = Shader.PropertyToID(\"ZBin1.lights\");\r\n       
    System.Int32 ZBin1_depth = Shader.PropertyToID(\"ZBin1.depth\");\r\n        System.Int32
    ZBin1_lightBuffer = Shader.PropertyToID(\"ZBin1.lightBuffer\");\r\n        System.Int32
    ZBin1_tileLights = Shader.PropertyToID(\"ZBin1.tileLights\");\r\n        System.Int32
    GBuffer2_depth = Shader.PropertyToID(\"GBuffer2.depth\");\r\n        System.Int32
    GBuffer2_diffuse = Shader.PropertyToID(\"GBuffer2.diffuse\");\r\n        System.Int32
    GBuffer2_specular = Shader.PropertyToID(\"GBuffer2.specular\");\r\n        System.Int32
    GBuffer2_normal = Shader.PropertyToID(\"GBuffer2.normal\");\r\n        System.Int32
    GBuffer2_emission = Shader.PropertyToID(\"GBuffer2.emission\");\r\n        System.Int32
    GBuffer2_microAO = Shader.PropertyToID(\"GBuffer2.microAO\");\r\n        System.Int32
    GBuffer2_motion = Shader.PropertyToID(\"GBuffer2.motion\");\r\n        System.Int32
    OutputNode3_result = Shader.PropertyToID(\"OutputNode3.result\");\r\n       
    System.Int32 RTDI4_lights = Shader.PropertyToID(\"RTDI4.lights\");\r\n       
    System.Int32 RTDI4_lightBuffer = Shader.PropertyToID(\"RTDI4.lightBuffer\");\r\n       
    System.Int32 RTDI4_tiledLights = Shader.PropertyToID(\"RTDI4.tiledLights\");\r\n       
    System.Int32 RTDI4_directionalLightBuffer = Shader.PropertyToID(\"RTDI4.directionalLightBuffer\");\r\n       
    System.Int32 RTDI4_depth = Shader.PropertyToID(\"RTDI4.depth\");\r\n        System.Int32
    RTDI4_diffuse = Shader.PropertyToID(\"RTDI4.diffuse\");\r\n        System.Int32
    RTDI4_specular = Shader.PropertyToID(\"RTDI4.specular\");\r\n        System.Int32
    RTDI4_normal = Shader.PropertyToID(\"RTDI4.normal\");\r\n        System.Int32
    RTDI4_emission = Shader.PropertyToID(\"RTDI4.emission\");\r\n        System.Int32
    RTDI4_ao = Shader.PropertyToID(\"RTDI4.ao\");\r\n        System.Int32 RTDI4_lightingResult
    = Shader.PropertyToID(\"RTDI4.lightingResult\");\r\n        // ----------------------------\r\n       
    \r\n        public void Init()\r\n        {\r\n            CullLight0 = new CullLight();\r\n           
    CullLight0.cullingType = CullLight.CullingType.Frustum;\r\n            CullLight0.radius
    = 200f;\r\n            CullLight0.faraway = 100f;\r\n            CullLight0.enabled
    = true;\r\n            ZBin1 = new ZBin();\r\n            ZBin1.tileCount = new
    Vector3Int(128, 64, 24);\r\n            ZBin1.maxLightCountPerTile = 64;\r\n           
    ZBin1.includeRTLight = true;\r\n            ZBin1.enabled = true;\r\n           
    GBuffer2 = new GBuffer();\r\n            GBuffer2.a = 1f;\r\n            GBuffer2.b
    = false;\r\n            GBuffer2.c = new Vector2(1.10973f, 2f);\r\n           
    GBuffer2.d = E.d;\r\n            GBuffer2.e = 10;\r\n            GBuffer2.f =
    new Color(1f, 2f, 3f, 0.22334f);\r\n            GBuffer2.enabled = true;\r\n           
    OutputNode3 = new OutputNode();\r\n            OutputNode3.enabled = true;\r\n           
    RTDI4 = new RTDI();\r\n            RTDI4.includeSunlight = true;\r\n           
    RTDI4.enabled = true;\r\n        }\r\n        \r\n        public int Execute(RenderContext
    context, bool debug = false)\r\n        {\r\n            System.Int32 result
    = -1;\r\n            \r\n            //GBuffer2\r\n            {\r\n               
    context.commandBuffer.name = \"GBuffer2\";\r\n                // preprocess node\r\n               
    {\r\n                    // inputs\r\n                    GBuffer2.depth.AllocateResourcces(context,
    GBuffer2_depth);\r\n                    GBuffer2.depth.name = \"GBuffer2.depth\";\r\n                   
    // outputs\r\n                    GBuffer2.diffuse.AllocateResourcces(context,
    GBuffer2_diffuse);\r\n                    GBuffer2.diffuse.name = \"GBuffer2.diffuse\";\r\n                   
    GBuffer2.diffuse.connected = true;\r\n                    GBuffer2.specular.AllocateResourcces(context,
    GBuffer2_specular);\r\n                    GBuffer2.specular.name = \"GBuffer2.specular\";\r\n                   
    GBuffer2.specular.connected = true;\r\n                    GBuffer2.normal.AllocateResourcces(context,
    GBuffer2_normal);\r\n                    GBuffer2.normal.name = \"GBuffer2.normal\";\r\n                   
    GBuffer2.normal.connected = true;\r\n                    GBuffer2.emission.AllocateResourcces(context,
    GBuffer2_emission);\r\n                    GBuffer2.emission.name = \"GBuffer2.emission\";\r\n                   
    GBuffer2.emission.connected = true;\r\n                    GBuffer2.microAO.AllocateResourcces(context,
    GBuffer2_microAO);\r\n                    GBuffer2.microAO.name = \"GBuffer2.microAO\";\r\n                   
    GBuffer2.microAO.connected = true;\r\n                    GBuffer2.motion.AllocateResourcces(context,
    GBuffer2_motion);\r\n                    GBuffer2.motion.name = \"GBuffer2.motion\";\r\n                   
    GBuffer2.motion.connected = false;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                GBuffer2.Execute(context);\r\n                // postprocess
    node\r\n                {\r\n                    GBuffer2.motion.ReleaseResourcces(context);\r\n                   
    GBuffer2.diffuse.connected = true;\r\n                    GBuffer2.specular.connected
    = true;\r\n                    GBuffer2.normal.connected = true;\r\n                   
    GBuffer2.emission.connected = true;\r\n                    GBuffer2.microAO.connected
    = true;\r\n                    GBuffer2.motion.connected = true;\r\n               
    }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //CullLight0\r\n           
    {\r\n                context.commandBuffer.name = \"CullLight0\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    // outputs\r\n                    CullLight0.lights.AllocateResourcces(context,
    CullLight0_lights);\r\n                    CullLight0.lights.name = \"CullLight0.lights\";\r\n                   
    CullLight0.lights.connected = true;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                CullLight0.Execute(context);\r\n                // postprocess
    node\r\n                {\r\n                }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //ZBin1\r\n           
    {\r\n                context.commandBuffer.name = \"ZBin1\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    ZBin1.lights.connected = true;\r\n                    ZBin1.lights.Move(CullLight0.lights);\r\n                   
    ZBin1.depth.AllocateResourcces(context, ZBin1_depth);\r\n                   
    ZBin1.depth.name = \"ZBin1.depth\";\r\n                    // outputs\r\n                   
    ZBin1.lightBuffer.AllocateResourcces(context, ZBin1_lightBuffer);\r\n                   
    ZBin1.lightBuffer.name = \"ZBin1.lightBuffer\";\r\n                    ZBin1.lightBuffer.connected
    = true;\r\n                    ZBin1.tileLights.AllocateResourcces(context, ZBin1_tileLights);\r\n                   
    ZBin1.tileLights.name = \"ZBin1.tileLights\";\r\n                    ZBin1.tileLights.connected
    = true;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                ZBin1.Execute(context);\r\n                // postprocess
    node\r\n                {\r\n                    ZBin1.depth.ReleaseResourcces(context);\r\n                   
    ZBin1.tileLights.connected = true;\r\n                }\r\n                context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //RTDI4\r\n           
    {\r\n                context.commandBuffer.name = \"RTDI4\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    RTDI4.lights.connected = true;\r\n                    RTDI4.lights.Move(CullLight0.lights);\r\n                   
    RTDI4.lightBuffer.connected = true;\r\n                    RTDI4.lightBuffer.Move(ZBin1.lightBuffer);\r\n                   
    RTDI4.tiledLights.connected = true;\r\n                    RTDI4.tiledLights.Move(ZBin1.tileLights);\r\n                   
    RTDI4.directionalLightBuffer.AllocateResourcces(context, RTDI4_directionalLightBuffer);\r\n                   
    RTDI4.directionalLightBuffer.name = \"RTDI4.directionalLightBuffer\";\r\n                   
    RTDI4.depth.connected = true;\r\n                    RTDI4.depth.Move(GBuffer2.depth);\r\n                   
    RTDI4.diffuse.connected = true;\r\n                    RTDI4.diffuse.Move(GBuffer2.diffuse);\r\n                   
    RTDI4.specular.connected = true;\r\n                    RTDI4.specular.Move(GBuffer2.specular);\r\n                   
    RTDI4.normal.connected = true;\r\n                    RTDI4.normal.Move(GBuffer2.normal);\r\n                   
    RTDI4.emission.connected = true;\r\n                    RTDI4.emission.Move(GBuffer2.emission);\r\n                   
    RTDI4.ao.connected = true;\r\n                    RTDI4.ao.Move(GBuffer2.microAO);\r\n                   
    // outputs\r\n                    RTDI4.lightingResult.AllocateResourcces(context,
    RTDI4_lightingResult);\r\n                    RTDI4.lightingResult.name = \"RTDI4.lightingResult\";\r\n                   
    RTDI4.lightingResult.connected = true;\r\n                    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                RTDI4.Execute(context);\r\n                // postprocess
    node\r\n                {\r\n                    RTDI4.lightBuffer.ReleaseResourcces(context);\r\n                   
    RTDI4.tiledLights.ReleaseResourcces(context);\r\n                    RTDI4.directionalLightBuffer.ReleaseResourcces(context);\r\n                   
    RTDI4.depth.ReleaseResourcces(context);\r\n                    RTDI4.diffuse.ReleaseResourcces(context);\r\n                   
    RTDI4.specular.ReleaseResourcces(context);\r\n                    RTDI4.normal.ReleaseResourcces(context);\r\n                   
    RTDI4.emission.ReleaseResourcces(context);\r\n                    RTDI4.ao.ReleaseResourcces(context);\r\n                   
    RTDI4.lightingResult.connected = true;\r\n                }\r\n               
    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n               
    context.commandBuffer.Clear();\r\n            }\r\n            //OutputNode3\r\n           
    {\r\n                context.commandBuffer.name = \"OutputNode3\";\r\n               
    // preprocess node\r\n                {\r\n                    // inputs\r\n                   
    OutputNode3.result.connected = true;\r\n                    OutputNode3.result.AllocateResourcces(context,
    OutputNode3_result);\r\n                    OutputNode3.result.name = \"OutputNode3.result\";\r\n                   
    OutputNode3.result.CastFrom(context, RTDI4.lightingResult);\r\n                   
    RTDI4.lightingResult.ReleaseResourcces(context);\r\n                    // outputs\r\n                   
    context.context.ExecuteCommandBuffer(context.commandBuffer);\r\n                   
    context.commandBuffer.Clear();\r\n                }\r\n                // perform
    node\r\n                result = OutputNode3.result.handle;\r\n               
    return result;\r\n            }\r\n        }\r\n        \r\n        public void
    Dispose()\r\n        {\r\n            // CullLight0\r\n            {\r\n               
    CullLight0.lights.Dispose();\r\n                CullLight0.Dispose();\r\n           
    }\r\n            // ZBin1\r\n            {\r\n                ZBin1.lights.Dispose();\r\n               
    ZBin1.depth.Dispose();\r\n                ZBin1.lightBuffer.Dispose();\r\n               
    ZBin1.tileLights.Dispose();\r\n                ZBin1.Dispose();\r\n           
    }\r\n            // GBuffer2\r\n            {\r\n                GBuffer2.depth.Dispose();\r\n               
    GBuffer2.diffuse.Dispose();\r\n                GBuffer2.specular.Dispose();\r\n               
    GBuffer2.normal.Dispose();\r\n                GBuffer2.emission.Dispose();\r\n               
    GBuffer2.microAO.Dispose();\r\n                GBuffer2.motion.Dispose();\r\n               
    GBuffer2.Dispose();\r\n            }\r\n            // OutputNode3\r\n           
    {\r\n                OutputNode3.result.Dispose();\r\n                OutputNode3.Dispose();\r\n           
    }\r\n            // RTDI4\r\n            {\r\n                RTDI4.lights.Dispose();\r\n               
    RTDI4.lightBuffer.Dispose();\r\n                RTDI4.tiledLights.Dispose();\r\n               
    RTDI4.directionalLightBuffer.Dispose();\r\n                RTDI4.depth.Dispose();\r\n               
    RTDI4.diffuse.Dispose();\r\n                RTDI4.specular.Dispose();\r\n               
    RTDI4.normal.Dispose();\r\n                RTDI4.emission.Dispose();\r\n               
    RTDI4.ao.Dispose();\r\n                RTDI4.lightingResult.Dispose();\r\n               
    RTDI4.Dispose();\r\n            }\r\n        }\r\n    }\r\n}\r\n"
